//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Entity;
using System.Data.Entity.Core;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ABSNowModel", "PackageLicensePurchased", "Package", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(TFCNowModel.Package), "LicensePurchased", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TFCNowModel.LicensePurchased), true)]
[assembly: EdmRelationshipAttribute("ABSNowModel", "CustomerLicensePurchased", "Customer", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(TFCNowModel.Customer), "LicensePurchased", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TFCNowModel.LicensePurchased), true)]
[assembly: EdmRelationshipAttribute("ABSNowModel", "CustomerSubscriptionDetail", "Customer", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(TFCNowModel.Customer), "SubscriptionDetail", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TFCNowModel.SubscriptionDetail), true)]

#endregion

namespace TFCNowModel
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ABSNowEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ABSNowEntities object using the connection string found in the 'ABSNowEntities' section of the application configuration file.
        /// </summary>
        public ABSNowEntities() : base("name=ABSNowEntities", "ABSNowEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ABSNowEntities object.
        /// </summary>
        public ABSNowEntities(string connectionString) : base(connectionString, "ABSNowEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ABSNowEntities object.
        /// </summary>
        public ABSNowEntities(EntityConnection connection) : base(connection, "ABSNowEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Customer> Customers
        {
            get
            {
                if ((_Customers == null))
                {
                    _Customers = base.CreateObjectSet<Customer>("Customers");
                }
                return _Customers;
            }
        }
        private ObjectSet<Customer> _Customers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Package> Packages
        {
            get
            {
                if ((_Packages == null))
                {
                    _Packages = base.CreateObjectSet<Package>("Packages");
                }
                return _Packages;
            }
        }
        private ObjectSet<Package> _Packages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LicensePurchased> LicensePurchaseds
        {
            get
            {
                if ((_LicensePurchaseds == null))
                {
                    _LicensePurchaseds = base.CreateObjectSet<LicensePurchased>("LicensePurchaseds");
                }
                return _LicensePurchaseds;
            }
        }
        private ObjectSet<LicensePurchased> _LicensePurchaseds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubscriptionDetail> SubscriptionDetails
        {
            get
            {
                if ((_SubscriptionDetails == null))
                {
                    _SubscriptionDetails = base.CreateObjectSet<SubscriptionDetail>("SubscriptionDetails");
                }
                return _SubscriptionDetails;
            }
        }
        private ObjectSet<SubscriptionDetail> _SubscriptionDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NCashWalletBalance> NCashWalletBalances
        {
            get
            {
                if ((_NCashWalletBalances == null))
                {
                    _NCashWalletBalances = base.CreateObjectSet<NCashWalletBalance>("NCashWalletBalances");
                }
                return _NCashWalletBalances;
            }
        }
        private ObjectSet<NCashWalletBalance> _NCashWalletBalances;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NCashWalletBalanceTemp> NCashWalletBalanceTemps
        {
            get
            {
                if ((_NCashWalletBalanceTemps == null))
                {
                    _NCashWalletBalanceTemps = base.CreateObjectSet<NCashWalletBalanceTemp>("NCashWalletBalanceTemps");
                }
                return _NCashWalletBalanceTemps;
            }
        }
        private ObjectSet<NCashWalletBalanceTemp> _NCashWalletBalanceTemps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NCashWalletBalanceView> NCashWalletBalanceViews
        {
            get
            {
                if ((_NCashWalletBalanceViews == null))
                {
                    _NCashWalletBalanceViews = base.CreateObjectSet<NCashWalletBalanceView>("NCashWalletBalanceViews");
                }
                return _NCashWalletBalanceViews;
            }
        }
        private ObjectSet<NCashWalletBalanceView> _NCashWalletBalanceViews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NCashWalletBalanceTable> NCashWalletBalanceTables
        {
            get
            {
                if ((_NCashWalletBalanceTables == null))
                {
                    _NCashWalletBalanceTables = base.CreateObjectSet<NCashWalletBalanceTable>("NCashWalletBalanceTables");
                }
                return _NCashWalletBalanceTables;
            }
        }
        private ObjectSet<NCashWalletBalanceTable> _NCashWalletBalanceTables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TFCNowRetailMigrationID> TFCNowRetailMigrationIDs
        {
            get
            {
                if ((_TFCNowRetailMigrationIDs == null))
                {
                    _TFCNowRetailMigrationIDs = base.CreateObjectSet<TFCNowRetailMigrationID>("TFCNowRetailMigrationIDs");
                }
                return _TFCNowRetailMigrationIDs;
            }
        }
        private ObjectSet<TFCNowRetailMigrationID> _TFCNowRetailMigrationIDs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TFCNowRetailMigrationTFCTV> TFCNowRetailMigrationTFCTVs
        {
            get
            {
                if ((_TFCNowRetailMigrationTFCTVs == null))
                {
                    _TFCNowRetailMigrationTFCTVs = base.CreateObjectSet<TFCNowRetailMigrationTFCTV>("TFCNowRetailMigrationTFCTVs");
                }
                return _TFCNowRetailMigrationTFCTVs;
            }
        }
        private ObjectSet<TFCNowRetailMigrationTFCTV> _TFCNowRetailMigrationTFCTVs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LicensePurchasedProcessed> LicensePurchasedProcesseds
        {
            get
            {
                if ((_LicensePurchasedProcesseds == null))
                {
                    _LicensePurchasedProcesseds = base.CreateObjectSet<LicensePurchasedProcessed>("LicensePurchasedProcesseds");
                }
                return _LicensePurchasedProcesseds;
            }
        }
        private ObjectSet<LicensePurchasedProcessed> _LicensePurchasedProcesseds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomerLicensePurchased1> CustomerLicensePurchased1
        {
            get
            {
                if ((_CustomerLicensePurchased1 == null))
                {
                    _CustomerLicensePurchased1 = base.CreateObjectSet<CustomerLicensePurchased1>("CustomerLicensePurchased1");
                }
                return _CustomerLicensePurchased1;
            }
        }
        private ObjectSet<CustomerLicensePurchased1> _CustomerLicensePurchased1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vwCustomerLicensePurchased> vwCustomerLicensePurchaseds
        {
            get
            {
                if ((_vwCustomerLicensePurchaseds == null))
                {
                    _vwCustomerLicensePurchaseds = base.CreateObjectSet<vwCustomerLicensePurchased>("vwCustomerLicensePurchaseds");
                }
                return _vwCustomerLicensePurchaseds;
            }
        }
        private ObjectSet<vwCustomerLicensePurchased> _vwCustomerLicensePurchaseds;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Customers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomers(Customer customer)
        {
            base.AddObject("Customers", customer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Packages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPackages(Package package)
        {
            base.AddObject("Packages", package);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LicensePurchaseds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLicensePurchaseds(LicensePurchased licensePurchased)
        {
            base.AddObject("LicensePurchaseds", licensePurchased);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubscriptionDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubscriptionDetails(SubscriptionDetail subscriptionDetail)
        {
            base.AddObject("SubscriptionDetails", subscriptionDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NCashWalletBalances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNCashWalletBalances(NCashWalletBalance nCashWalletBalance)
        {
            base.AddObject("NCashWalletBalances", nCashWalletBalance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NCashWalletBalanceTemps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNCashWalletBalanceTemps(NCashWalletBalanceTemp nCashWalletBalanceTemp)
        {
            base.AddObject("NCashWalletBalanceTemps", nCashWalletBalanceTemp);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NCashWalletBalanceViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNCashWalletBalanceViews(NCashWalletBalanceView nCashWalletBalanceView)
        {
            base.AddObject("NCashWalletBalanceViews", nCashWalletBalanceView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NCashWalletBalanceTables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNCashWalletBalanceTables(NCashWalletBalanceTable nCashWalletBalanceTable)
        {
            base.AddObject("NCashWalletBalanceTables", nCashWalletBalanceTable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TFCNowRetailMigrationIDs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTFCNowRetailMigrationIDs(TFCNowRetailMigrationID tFCNowRetailMigrationID)
        {
            base.AddObject("TFCNowRetailMigrationIDs", tFCNowRetailMigrationID);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TFCNowRetailMigrationTFCTVs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTFCNowRetailMigrationTFCTVs(TFCNowRetailMigrationTFCTV tFCNowRetailMigrationTFCTV)
        {
            base.AddObject("TFCNowRetailMigrationTFCTVs", tFCNowRetailMigrationTFCTV);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LicensePurchasedProcesseds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLicensePurchasedProcesseds(LicensePurchasedProcessed licensePurchasedProcessed)
        {
            base.AddObject("LicensePurchasedProcesseds", licensePurchasedProcessed);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomerLicensePurchased1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomerLicensePurchased1(CustomerLicensePurchased1 customerLicensePurchased1)
        {
            base.AddObject("CustomerLicensePurchased1", customerLicensePurchased1);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vwCustomerLicensePurchaseds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovwCustomerLicensePurchaseds(vwCustomerLicensePurchased vwCustomerLicensePurchased)
        {
            base.AddObject("vwCustomerLicensePurchaseds", vwCustomerLicensePurchased);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="email">No Metadata Documentation available.</param>
        /// <param name="packageID">No Metadata Documentation available.</param>
        /// <param name="endDate">No Metadata Documentation available.</param>
        public int TFCnowExtendLicense(global::System.String email, Nullable<global::System.Int32> packageID, Nullable<global::System.DateTime> endDate)
        {
            ObjectParameter emailParameter;
            if (email != null)
            {
                emailParameter = new ObjectParameter("email", email);
            }
            else
            {
                emailParameter = new ObjectParameter("email", typeof(global::System.String));
            }
    
            ObjectParameter packageIDParameter;
            if (packageID.HasValue)
            {
                packageIDParameter = new ObjectParameter("packageID", packageID);
            }
            else
            {
                packageIDParameter = new ObjectParameter("packageID", typeof(global::System.Int32));
            }
    
            ObjectParameter endDateParameter;
            if (endDate.HasValue)
            {
                endDateParameter = new ObjectParameter("endDate", endDate);
            }
            else
            {
                endDateParameter = new ObjectParameter("endDate", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("TFCnowExtendLicense", emailParameter, packageIDParameter, endDateParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ABSNowModel", Name="Customer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Customer object.
        /// </summary>
        /// <param name="customerID">Initial value of the CustomerID property.</param>
        /// <param name="birthDay">Initial value of the BirthDay property.</param>
        /// <param name="registeredDate">Initial value of the RegisteredDate property.</param>
        /// <param name="rowguid">Initial value of the rowguid property.</param>
        public static Customer CreateCustomer(global::System.Int32 customerID, global::System.DateTime birthDay, global::System.String registeredDate, global::System.Guid rowguid)
        {
            Customer customer = new Customer();
            customer.CustomerID = customerID;
            customer.BirthDay = birthDay;
            customer.RegisteredDate = registeredDate;
            customer.rowguid = rowguid;
            return customer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                if (_CustomerID != value)
                {
                    OnCustomerIDChanging(value);
                    ReportPropertyChanging("CustomerID");
                    _CustomerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CustomerID");
                    OnCustomerIDChanged();
                }
            }
        }
        private global::System.Int32 _CustomerID;
        partial void OnCustomerIDChanging(global::System.Int32 value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime BirthDay
        {
            get
            {
                return _BirthDay;
            }
            set
            {
                OnBirthDayChanging(value);
                ReportPropertyChanging("BirthDay");
                _BirthDay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BirthDay");
                OnBirthDayChanged();
            }
        }
        private global::System.DateTime _BirthDay;
        partial void OnBirthDayChanging(global::System.DateTime value);
        partial void OnBirthDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Zip
        {
            get
            {
                return _Zip;
            }
            set
            {
                OnZipChanging(value);
                ReportPropertyChanging("Zip");
                _Zip = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Zip");
                OnZipChanged();
            }
        }
        private global::System.String _Zip;
        partial void OnZipChanging(global::System.String value);
        partial void OnZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactNumber
        {
            get
            {
                return _ContactNumber;
            }
            set
            {
                OnContactNumberChanging(value);
                ReportPropertyChanging("ContactNumber");
                _ContactNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactNumber");
                OnContactNumberChanged();
            }
        }
        private global::System.String _ContactNumber;
        partial void OnContactNumberChanging(global::System.String value);
        partial void OnContactNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneMobile
        {
            get
            {
                return _PhoneMobile;
            }
            set
            {
                OnPhoneMobileChanging(value);
                ReportPropertyChanging("PhoneMobile");
                _PhoneMobile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneMobile");
                OnPhoneMobileChanged();
            }
        }
        private global::System.String _PhoneMobile;
        partial void OnPhoneMobileChanging(global::System.String value);
        partial void OnPhoneMobileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneWork
        {
            get
            {
                return _PhoneWork;
            }
            set
            {
                OnPhoneWorkChanging(value);
                ReportPropertyChanging("PhoneWork");
                _PhoneWork = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneWork");
                OnPhoneWorkChanged();
            }
        }
        private global::System.String _PhoneWork;
        partial void OnPhoneWorkChanging(global::System.String value);
        partial void OnPhoneWorkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IPAddress
        {
            get
            {
                return _IPAddress;
            }
            set
            {
                OnIPAddressChanging(value);
                ReportPropertyChanging("IPAddress");
                _IPAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IPAddress");
                OnIPAddressChanged();
            }
        }
        private global::System.String _IPAddress;
        partial void OnIPAddressChanging(global::System.String value);
        partial void OnIPAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> SiteID
        {
            get
            {
                return _SiteID;
            }
            set
            {
                OnSiteIDChanging(value);
                ReportPropertyChanging("SiteID");
                _SiteID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SiteID");
                OnSiteIDChanged();
            }
        }
        private Nullable<global::System.Int16> _SiteID;
        partial void OnSiteIDChanging(Nullable<global::System.Int16> value);
        partial void OnSiteIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RegisteredDate
        {
            get
            {
                return _RegisteredDate;
            }
            set
            {
                OnRegisteredDateChanging(value);
                ReportPropertyChanging("RegisteredDate");
                _RegisteredDate = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RegisteredDate");
                OnRegisteredDateChanged();
            }
        }
        private global::System.String _RegisteredDate;
        partial void OnRegisteredDateChanging(global::System.String value);
        partial void OnRegisteredDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityQuestion
        {
            get
            {
                return _SecurityQuestion;
            }
            set
            {
                OnSecurityQuestionChanging(value);
                ReportPropertyChanging("SecurityQuestion");
                _SecurityQuestion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityQuestion");
                OnSecurityQuestionChanged();
            }
        }
        private global::System.String _SecurityQuestion;
        partial void OnSecurityQuestionChanging(global::System.String value);
        partial void OnSecurityQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityAnswer
        {
            get
            {
                return _SecurityAnswer;
            }
            set
            {
                OnSecurityAnswerChanging(value);
                ReportPropertyChanging("SecurityAnswer");
                _SecurityAnswer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityAnswer");
                OnSecurityAnswerChanged();
            }
        }
        private global::System.String _SecurityAnswer;
        partial void OnSecurityAnswerChanging(global::System.String value);
        partial void OnSecurityAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Verified
        {
            get
            {
                return _Verified;
            }
            set
            {
                OnVerifiedChanging(value);
                ReportPropertyChanging("Verified");
                _Verified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Verified");
                OnVerifiedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Verified;
        partial void OnVerifiedChanging(Nullable<global::System.Boolean> value);
        partial void OnVerifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ActivationDate
        {
            get
            {
                return _ActivationDate;
            }
            set
            {
                OnActivationDateChanging(value);
                ReportPropertyChanging("ActivationDate");
                _ActivationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActivationDate");
                OnActivationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ActivationDate;
        partial void OnActivationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnActivationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid rowguid
        {
            get
            {
                return _rowguid;
            }
            set
            {
                OnrowguidChanging(value);
                ReportPropertyChanging("rowguid");
                _rowguid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rowguid");
                OnrowguidChanged();
            }
        }
        private global::System.Guid _rowguid;
        partial void OnrowguidChanging(global::System.Guid value);
        partial void OnrowguidChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ABSNowModel", "CustomerLicensePurchased", "LicensePurchased")]
        public EntityCollection<LicensePurchased> LicensePurchaseds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LicensePurchased>("ABSNowModel.CustomerLicensePurchased", "LicensePurchased");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LicensePurchased>("ABSNowModel.CustomerLicensePurchased", "LicensePurchased", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ABSNowModel", "CustomerSubscriptionDetail", "SubscriptionDetail")]
        public EntityCollection<SubscriptionDetail> SubscriptionDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubscriptionDetail>("ABSNowModel.CustomerSubscriptionDetail", "SubscriptionDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubscriptionDetail>("ABSNowModel.CustomerSubscriptionDetail", "SubscriptionDetail", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ABSNowModel", Name="CustomerLicensePurchased1")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomerLicensePurchased1 : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomerLicensePurchased1 object.
        /// </summary>
        /// <param name="licensePurchasedID">Initial value of the LicensePurchasedID property.</param>
        /// <param name="packageID">Initial value of the PackageID property.</param>
        /// <param name="customerID">Initial value of the CustomerID property.</param>
        /// <param name="licenseEndDate">Initial value of the LicenseEndDate property.</param>
        /// <param name="transactionID">Initial value of the TransactionID property.</param>
        public static CustomerLicensePurchased1 CreateCustomerLicensePurchased1(global::System.Guid licensePurchasedID, global::System.Int32 packageID, global::System.Int32 customerID, global::System.DateTime licenseEndDate, global::System.String transactionID)
        {
            CustomerLicensePurchased1 customerLicensePurchased1 = new CustomerLicensePurchased1();
            customerLicensePurchased1.LicensePurchasedID = licensePurchasedID;
            customerLicensePurchased1.PackageID = packageID;
            customerLicensePurchased1.CustomerID = customerID;
            customerLicensePurchased1.LicenseEndDate = licenseEndDate;
            customerLicensePurchased1.TransactionID = transactionID;
            return customerLicensePurchased1;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LicensePurchasedID
        {
            get
            {
                return _LicensePurchasedID;
            }
            set
            {
                if (_LicensePurchasedID != value)
                {
                    OnLicensePurchasedIDChanging(value);
                    ReportPropertyChanging("LicensePurchasedID");
                    _LicensePurchasedID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LicensePurchasedID");
                    OnLicensePurchasedIDChanged();
                }
            }
        }
        private global::System.Guid _LicensePurchasedID;
        partial void OnLicensePurchasedIDChanging(global::System.Guid value);
        partial void OnLicensePurchasedIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PackageID
        {
            get
            {
                return _PackageID;
            }
            set
            {
                if (_PackageID != value)
                {
                    OnPackageIDChanging(value);
                    ReportPropertyChanging("PackageID");
                    _PackageID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PackageID");
                    OnPackageIDChanged();
                }
            }
        }
        private global::System.Int32 _PackageID;
        partial void OnPackageIDChanging(global::System.Int32 value);
        partial void OnPackageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                if (_CustomerID != value)
                {
                    OnCustomerIDChanging(value);
                    ReportPropertyChanging("CustomerID");
                    _CustomerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CustomerID");
                    OnCustomerIDChanged();
                }
            }
        }
        private global::System.Int32 _CustomerID;
        partial void OnCustomerIDChanging(global::System.Int32 value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LicenseEndDate
        {
            get
            {
                return _LicenseEndDate;
            }
            set
            {
                if (_LicenseEndDate != value)
                {
                    OnLicenseEndDateChanging(value);
                    ReportPropertyChanging("LicenseEndDate");
                    _LicenseEndDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LicenseEndDate");
                    OnLicenseEndDateChanged();
                }
            }
        }
        private global::System.DateTime _LicenseEndDate;
        partial void OnLicenseEndDateChanging(global::System.DateTime value);
        partial void OnLicenseEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransactionID
        {
            get
            {
                return _TransactionID;
            }
            set
            {
                if (_TransactionID != value)
                {
                    OnTransactionIDChanging(value);
                    ReportPropertyChanging("TransactionID");
                    _TransactionID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TransactionID");
                    OnTransactionIDChanged();
                }
            }
        }
        private global::System.String _TransactionID;
        partial void OnTransactionIDChanging(global::System.String value);
        partial void OnTransactionIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ABSNowModel", Name="LicensePurchased")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LicensePurchased : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LicensePurchased object.
        /// </summary>
        /// <param name="licensePurchasedID">Initial value of the LicensePurchasedID property.</param>
        /// <param name="customerID">Initial value of the CustomerID property.</param>
        /// <param name="transactionID">Initial value of the TransactionID property.</param>
        /// <param name="packageID">Initial value of the PackageID property.</param>
        /// <param name="transactionDate">Initial value of the TransactionDate property.</param>
        /// <param name="transactionAmount">Initial value of the TransactionAmount property.</param>
        /// <param name="netAmount">Initial value of the NetAmount property.</param>
        /// <param name="transactionCurrency">Initial value of the TransactionCurrency property.</param>
        /// <param name="licenseDuration">Initial value of the LicenseDuration property.</param>
        /// <param name="durationUnit">Initial value of the DurationUnit property.</param>
        /// <param name="licenseStartDate">Initial value of the LicenseStartDate property.</param>
        /// <param name="licenseEndDate">Initial value of the LicenseEndDate property.</param>
        /// <param name="comments">Initial value of the Comments property.</param>
        /// <param name="newSubscription">Initial value of the NewSubscription property.</param>
        /// <param name="iPAddress">Initial value of the IPAddress property.</param>
        /// <param name="reversed">Initial value of the Reversed property.</param>
        /// <param name="paymentType">Initial value of the PaymentType property.</param>
        /// <param name="packageDetailID">Initial value of the PackageDetailID property.</param>
        /// <param name="itemID">Initial value of the ItemID property.</param>
        public static LicensePurchased CreateLicensePurchased(global::System.Guid licensePurchasedID, global::System.Int32 customerID, global::System.String transactionID, global::System.Int32 packageID, global::System.DateTime transactionDate, global::System.Decimal transactionAmount, global::System.Decimal netAmount, global::System.String transactionCurrency, global::System.Int32 licenseDuration, global::System.String durationUnit, global::System.DateTime licenseStartDate, global::System.DateTime licenseEndDate, global::System.String comments, global::System.Boolean newSubscription, global::System.String iPAddress, global::System.Boolean reversed, global::System.Int32 paymentType, global::System.Int32 packageDetailID, global::System.Guid itemID)
        {
            LicensePurchased licensePurchased = new LicensePurchased();
            licensePurchased.LicensePurchasedID = licensePurchasedID;
            licensePurchased.CustomerID = customerID;
            licensePurchased.TransactionID = transactionID;
            licensePurchased.PackageID = packageID;
            licensePurchased.TransactionDate = transactionDate;
            licensePurchased.TransactionAmount = transactionAmount;
            licensePurchased.NetAmount = netAmount;
            licensePurchased.TransactionCurrency = transactionCurrency;
            licensePurchased.LicenseDuration = licenseDuration;
            licensePurchased.DurationUnit = durationUnit;
            licensePurchased.LicenseStartDate = licenseStartDate;
            licensePurchased.LicenseEndDate = licenseEndDate;
            licensePurchased.Comments = comments;
            licensePurchased.NewSubscription = newSubscription;
            licensePurchased.IPAddress = iPAddress;
            licensePurchased.Reversed = reversed;
            licensePurchased.PaymentType = paymentType;
            licensePurchased.PackageDetailID = packageDetailID;
            licensePurchased.ItemID = itemID;
            return licensePurchased;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LicensePurchasedID
        {
            get
            {
                return _LicensePurchasedID;
            }
            set
            {
                OnLicensePurchasedIDChanging(value);
                ReportPropertyChanging("LicensePurchasedID");
                _LicensePurchasedID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicensePurchasedID");
                OnLicensePurchasedIDChanged();
            }
        }
        private global::System.Guid _LicensePurchasedID;
        partial void OnLicensePurchasedIDChanging(global::System.Guid value);
        partial void OnLicensePurchasedIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                if (_CustomerID != value)
                {
                    OnCustomerIDChanging(value);
                    ReportPropertyChanging("CustomerID");
                    _CustomerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CustomerID");
                    OnCustomerIDChanged();
                }
            }
        }
        private global::System.Int32 _CustomerID;
        partial void OnCustomerIDChanging(global::System.Int32 value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransactionID
        {
            get
            {
                return _TransactionID;
            }
            set
            {
                if (_TransactionID != value)
                {
                    OnTransactionIDChanging(value);
                    ReportPropertyChanging("TransactionID");
                    _TransactionID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TransactionID");
                    OnTransactionIDChanged();
                }
            }
        }
        private global::System.String _TransactionID;
        partial void OnTransactionIDChanging(global::System.String value);
        partial void OnTransactionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PackageID
        {
            get
            {
                return _PackageID;
            }
            set
            {
                if (_PackageID != value)
                {
                    OnPackageIDChanging(value);
                    ReportPropertyChanging("PackageID");
                    _PackageID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PackageID");
                    OnPackageIDChanged();
                }
            }
        }
        private global::System.Int32 _PackageID;
        partial void OnPackageIDChanging(global::System.Int32 value);
        partial void OnPackageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransactionDate
        {
            get
            {
                return _TransactionDate;
            }
            set
            {
                OnTransactionDateChanging(value);
                ReportPropertyChanging("TransactionDate");
                _TransactionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionDate");
                OnTransactionDateChanged();
            }
        }
        private global::System.DateTime _TransactionDate;
        partial void OnTransactionDateChanging(global::System.DateTime value);
        partial void OnTransactionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TransactionAmount
        {
            get
            {
                return _TransactionAmount;
            }
            set
            {
                OnTransactionAmountChanging(value);
                ReportPropertyChanging("TransactionAmount");
                _TransactionAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionAmount");
                OnTransactionAmountChanged();
            }
        }
        private global::System.Decimal _TransactionAmount;
        partial void OnTransactionAmountChanging(global::System.Decimal value);
        partial void OnTransactionAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal NetAmount
        {
            get
            {
                return _NetAmount;
            }
            set
            {
                OnNetAmountChanging(value);
                ReportPropertyChanging("NetAmount");
                _NetAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NetAmount");
                OnNetAmountChanged();
            }
        }
        private global::System.Decimal _NetAmount;
        partial void OnNetAmountChanging(global::System.Decimal value);
        partial void OnNetAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransactionCurrency
        {
            get
            {
                return _TransactionCurrency;
            }
            set
            {
                OnTransactionCurrencyChanging(value);
                ReportPropertyChanging("TransactionCurrency");
                _TransactionCurrency = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TransactionCurrency");
                OnTransactionCurrencyChanged();
            }
        }
        private global::System.String _TransactionCurrency;
        partial void OnTransactionCurrencyChanging(global::System.String value);
        partial void OnTransactionCurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LicenseDuration
        {
            get
            {
                return _LicenseDuration;
            }
            set
            {
                OnLicenseDurationChanging(value);
                ReportPropertyChanging("LicenseDuration");
                _LicenseDuration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseDuration");
                OnLicenseDurationChanged();
            }
        }
        private global::System.Int32 _LicenseDuration;
        partial void OnLicenseDurationChanging(global::System.Int32 value);
        partial void OnLicenseDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DurationUnit
        {
            get
            {
                return _DurationUnit;
            }
            set
            {
                OnDurationUnitChanging(value);
                ReportPropertyChanging("DurationUnit");
                _DurationUnit = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DurationUnit");
                OnDurationUnitChanged();
            }
        }
        private global::System.String _DurationUnit;
        partial void OnDurationUnitChanging(global::System.String value);
        partial void OnDurationUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LicenseStartDate
        {
            get
            {
                return _LicenseStartDate;
            }
            set
            {
                OnLicenseStartDateChanging(value);
                ReportPropertyChanging("LicenseStartDate");
                _LicenseStartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseStartDate");
                OnLicenseStartDateChanged();
            }
        }
        private global::System.DateTime _LicenseStartDate;
        partial void OnLicenseStartDateChanging(global::System.DateTime value);
        partial void OnLicenseStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LicenseEndDate
        {
            get
            {
                return _LicenseEndDate;
            }
            set
            {
                OnLicenseEndDateChanging(value);
                ReportPropertyChanging("LicenseEndDate");
                _LicenseEndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseEndDate");
                OnLicenseEndDateChanged();
            }
        }
        private global::System.DateTime _LicenseEndDate;
        partial void OnLicenseEndDateChanging(global::System.DateTime value);
        partial void OnLicenseEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean NewSubscription
        {
            get
            {
                return _NewSubscription;
            }
            set
            {
                OnNewSubscriptionChanging(value);
                ReportPropertyChanging("NewSubscription");
                _NewSubscription = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NewSubscription");
                OnNewSubscriptionChanged();
            }
        }
        private global::System.Boolean _NewSubscription;
        partial void OnNewSubscriptionChanging(global::System.Boolean value);
        partial void OnNewSubscriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IPAddress
        {
            get
            {
                return _IPAddress;
            }
            set
            {
                OnIPAddressChanging(value);
                ReportPropertyChanging("IPAddress");
                _IPAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IPAddress");
                OnIPAddressChanged();
            }
        }
        private global::System.String _IPAddress;
        partial void OnIPAddressChanging(global::System.String value);
        partial void OnIPAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Reversed
        {
            get
            {
                return _Reversed;
            }
            set
            {
                OnReversedChanging(value);
                ReportPropertyChanging("Reversed");
                _Reversed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Reversed");
                OnReversedChanged();
            }
        }
        private global::System.Boolean _Reversed;
        partial void OnReversedChanging(global::System.Boolean value);
        partial void OnReversedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentType
        {
            get
            {
                return _PaymentType;
            }
            set
            {
                OnPaymentTypeChanging(value);
                ReportPropertyChanging("PaymentType");
                _PaymentType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentType");
                OnPaymentTypeChanged();
            }
        }
        private global::System.Int32 _PaymentType;
        partial void OnPaymentTypeChanging(global::System.Int32 value);
        partial void OnPaymentTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PackageDetailID
        {
            get
            {
                return _PackageDetailID;
            }
            set
            {
                if (_PackageDetailID != value)
                {
                    OnPackageDetailIDChanging(value);
                    ReportPropertyChanging("PackageDetailID");
                    _PackageDetailID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PackageDetailID");
                    OnPackageDetailIDChanged();
                }
            }
        }
        private global::System.Int32 _PackageDetailID;
        partial void OnPackageDetailIDChanging(global::System.Int32 value);
        partial void OnPackageDetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                if (_ItemID != value)
                {
                    OnItemIDChanging(value);
                    ReportPropertyChanging("ItemID");
                    _ItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemID");
                    OnItemIDChanged();
                }
            }
        }
        private global::System.Guid _ItemID;
        partial void OnItemIDChanging(global::System.Guid value);
        partial void OnItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LicenseID
        {
            get
            {
                return _LicenseID;
            }
            set
            {
                OnLicenseIDChanging(value);
                ReportPropertyChanging("LicenseID");
                _LicenseID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseID");
                OnLicenseIDChanged();
            }
        }
        private Nullable<global::System.Int32> _LicenseID;
        partial void OnLicenseIDChanging(Nullable<global::System.Int32> value);
        partial void OnLicenseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MigrationID
        {
            get
            {
                return _MigrationID;
            }
            set
            {
                OnMigrationIDChanging(value);
                ReportPropertyChanging("MigrationID");
                _MigrationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MigrationID");
                OnMigrationIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MigrationID;
        partial void OnMigrationIDChanging(Nullable<global::System.Int32> value);
        partial void OnMigrationIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ABSNowModel", "PackageLicensePurchased", "Package")]
        public Package Package
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Package>("ABSNowModel.PackageLicensePurchased", "Package").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Package>("ABSNowModel.PackageLicensePurchased", "Package").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Package> PackageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Package>("ABSNowModel.PackageLicensePurchased", "Package");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Package>("ABSNowModel.PackageLicensePurchased", "Package", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ABSNowModel", "CustomerLicensePurchased", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("ABSNowModel.CustomerLicensePurchased", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("ABSNowModel.CustomerLicensePurchased", "Customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("ABSNowModel.CustomerLicensePurchased", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("ABSNowModel.CustomerLicensePurchased", "Customer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ABSNowModel", Name="LicensePurchasedProcessed")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LicensePurchasedProcessed : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LicensePurchasedProcessed object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="licensePurchasedID">Initial value of the LicensePurchasedID property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static LicensePurchasedProcessed CreateLicensePurchasedProcessed(global::System.Int32 id, global::System.Guid licensePurchasedID, global::System.DateTime createDate)
        {
            LicensePurchasedProcessed licensePurchasedProcessed = new LicensePurchasedProcessed();
            licensePurchasedProcessed.Id = id;
            licensePurchasedProcessed.LicensePurchasedID = licensePurchasedID;
            licensePurchasedProcessed.CreateDate = createDate;
            return licensePurchasedProcessed;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LicensePurchasedID
        {
            get
            {
                return _LicensePurchasedID;
            }
            set
            {
                if (_LicensePurchasedID != value)
                {
                    OnLicensePurchasedIDChanging(value);
                    ReportPropertyChanging("LicensePurchasedID");
                    _LicensePurchasedID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LicensePurchasedID");
                    OnLicensePurchasedIDChanged();
                }
            }
        }
        private global::System.Guid _LicensePurchasedID;
        partial void OnLicensePurchasedIDChanging(global::System.Guid value);
        partial void OnLicensePurchasedIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ABSNowModel", Name="NCashWalletBalance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NCashWalletBalance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NCashWalletBalance object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="balance">Initial value of the Balance property.</param>
        public static NCashWalletBalance CreateNCashWalletBalance(global::System.String userId, global::System.Decimal balance)
        {
            NCashWalletBalance nCashWalletBalance = new NCashWalletBalance();
            nCashWalletBalance.UserId = userId;
            nCashWalletBalance.Balance = balance;
            return nCashWalletBalance;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Balance
        {
            get
            {
                return _Balance;
            }
            set
            {
                OnBalanceChanging(value);
                ReportPropertyChanging("Balance");
                _Balance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Balance");
                OnBalanceChanged();
            }
        }
        private global::System.Decimal _Balance;
        partial void OnBalanceChanging(global::System.Decimal value);
        partial void OnBalanceChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ABSNowModel", Name="NCashWalletBalanceTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NCashWalletBalanceTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NCashWalletBalanceTable object.
        /// </summary>
        /// <param name="userId">Initial value of the userId property.</param>
        /// <param name="cashBalance">Initial value of the cashBalance property.</param>
        public static NCashWalletBalanceTable CreateNCashWalletBalanceTable(global::System.String userId, global::System.Decimal cashBalance)
        {
            NCashWalletBalanceTable nCashWalletBalanceTable = new NCashWalletBalanceTable();
            nCashWalletBalanceTable.userId = userId;
            nCashWalletBalanceTable.cashBalance = cashBalance;
            return nCashWalletBalanceTable;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String userId
        {
            get
            {
                return _userId;
            }
            set
            {
                if (_userId != value)
                {
                    OnuserIdChanging(value);
                    ReportPropertyChanging("userId");
                    _userId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("userId");
                    OnuserIdChanged();
                }
            }
        }
        private global::System.String _userId;
        partial void OnuserIdChanging(global::System.String value);
        partial void OnuserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal cashBalance
        {
            get
            {
                return _cashBalance;
            }
            set
            {
                if (_cashBalance != value)
                {
                    OncashBalanceChanging(value);
                    ReportPropertyChanging("cashBalance");
                    _cashBalance = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("cashBalance");
                    OncashBalanceChanged();
                }
            }
        }
        private global::System.Decimal _cashBalance;
        partial void OncashBalanceChanging(global::System.Decimal value);
        partial void OncashBalanceChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ABSNowModel", Name="NCashWalletBalanceTemp")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NCashWalletBalanceTemp : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NCashWalletBalanceTemp object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="balance">Initial value of the Balance property.</param>
        public static NCashWalletBalanceTemp CreateNCashWalletBalanceTemp(global::System.String userId, global::System.Decimal balance)
        {
            NCashWalletBalanceTemp nCashWalletBalanceTemp = new NCashWalletBalanceTemp();
            nCashWalletBalanceTemp.UserId = userId;
            nCashWalletBalanceTemp.Balance = balance;
            return nCashWalletBalanceTemp;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Balance
        {
            get
            {
                return _Balance;
            }
            set
            {
                OnBalanceChanging(value);
                ReportPropertyChanging("Balance");
                _Balance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Balance");
                OnBalanceChanged();
            }
        }
        private global::System.Decimal _Balance;
        partial void OnBalanceChanging(global::System.Decimal value);
        partial void OnBalanceChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ABSNowModel", Name="NCashWalletBalanceView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NCashWalletBalanceView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NCashWalletBalanceView object.
        /// </summary>
        /// <param name="userId">Initial value of the userId property.</param>
        /// <param name="cashBalance">Initial value of the cashBalance property.</param>
        public static NCashWalletBalanceView CreateNCashWalletBalanceView(global::System.String userId, global::System.Decimal cashBalance)
        {
            NCashWalletBalanceView nCashWalletBalanceView = new NCashWalletBalanceView();
            nCashWalletBalanceView.userId = userId;
            nCashWalletBalanceView.cashBalance = cashBalance;
            return nCashWalletBalanceView;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String userId
        {
            get
            {
                return _userId;
            }
            set
            {
                if (_userId != value)
                {
                    OnuserIdChanging(value);
                    ReportPropertyChanging("userId");
                    _userId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("userId");
                    OnuserIdChanged();
                }
            }
        }
        private global::System.String _userId;
        partial void OnuserIdChanging(global::System.String value);
        partial void OnuserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal cashBalance
        {
            get
            {
                return _cashBalance;
            }
            set
            {
                if (_cashBalance != value)
                {
                    OncashBalanceChanging(value);
                    ReportPropertyChanging("cashBalance");
                    _cashBalance = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("cashBalance");
                    OncashBalanceChanged();
                }
            }
        }
        private global::System.Decimal _cashBalance;
        partial void OncashBalanceChanging(global::System.Decimal value);
        partial void OncashBalanceChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ABSNowModel", Name="Package")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Package : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Package object.
        /// </summary>
        /// <param name="packageID">Initial value of the PackageID property.</param>
        /// <param name="packageName">Initial value of the PackageName property.</param>
        /// <param name="hidden">Initial value of the Hidden property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static Package CreatePackage(global::System.Int32 packageID, global::System.String packageName, global::System.Boolean hidden, global::System.Boolean deleted)
        {
            Package package = new Package();
            package.PackageID = packageID;
            package.PackageName = packageName;
            package.Hidden = hidden;
            package.Deleted = deleted;
            return package;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PackageID
        {
            get
            {
                return _PackageID;
            }
            set
            {
                if (_PackageID != value)
                {
                    OnPackageIDChanging(value);
                    ReportPropertyChanging("PackageID");
                    _PackageID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PackageID");
                    OnPackageIDChanged();
                }
            }
        }
        private global::System.Int32 _PackageID;
        partial void OnPackageIDChanging(global::System.Int32 value);
        partial void OnPackageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PackageName
        {
            get
            {
                return _PackageName;
            }
            set
            {
                OnPackageNameChanging(value);
                ReportPropertyChanging("PackageName");
                _PackageName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PackageName");
                OnPackageNameChanged();
            }
        }
        private global::System.String _PackageName;
        partial void OnPackageNameChanging(global::System.String value);
        partial void OnPackageNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PackageDescription
        {
            get
            {
                return _PackageDescription;
            }
            set
            {
                OnPackageDescriptionChanging(value);
                ReportPropertyChanging("PackageDescription");
                _PackageDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PackageDescription");
                OnPackageDescriptionChanged();
            }
        }
        private global::System.String _PackageDescription;
        partial void OnPackageDescriptionChanging(global::System.String value);
        partial void OnPackageDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CategoryID;
        partial void OnCategoryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Image
        {
            get
            {
                return _Image;
            }
            set
            {
                OnImageChanging(value);
                ReportPropertyChanging("Image");
                _Image = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Image");
                OnImageChanged();
            }
        }
        private global::System.String _Image;
        partial void OnImageChanging(global::System.String value);
        partial void OnImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Hidden
        {
            get
            {
                return _Hidden;
            }
            set
            {
                OnHiddenChanging(value);
                ReportPropertyChanging("Hidden");
                _Hidden = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Hidden");
                OnHiddenChanged();
            }
        }
        private global::System.Boolean _Hidden;
        partial void OnHiddenChanging(global::System.Boolean value);
        partial void OnHiddenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VideoBoxImage
        {
            get
            {
                return _VideoBoxImage;
            }
            set
            {
                OnVideoBoxImageChanging(value);
                ReportPropertyChanging("VideoBoxImage");
                _VideoBoxImage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VideoBoxImage");
                OnVideoBoxImageChanged();
            }
        }
        private global::System.String _VideoBoxImage;
        partial void OnVideoBoxImageChanging(global::System.String value);
        partial void OnVideoBoxImageChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ABSNowModel", "PackageLicensePurchased", "LicensePurchased")]
        public EntityCollection<LicensePurchased> LicensePurchaseds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LicensePurchased>("ABSNowModel.PackageLicensePurchased", "LicensePurchased");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LicensePurchased>("ABSNowModel.PackageLicensePurchased", "LicensePurchased", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ABSNowModel", Name="SubscriptionDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubscriptionDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubscriptionDetail object.
        /// </summary>
        /// <param name="customerID">Initial value of the CustomerID property.</param>
        /// <param name="licenseIssued">Initial value of the LicenseIssued property.</param>
        public static SubscriptionDetail CreateSubscriptionDetail(global::System.Int32 customerID, global::System.Boolean licenseIssued)
        {
            SubscriptionDetail subscriptionDetail = new SubscriptionDetail();
            subscriptionDetail.CustomerID = customerID;
            subscriptionDetail.LicenseIssued = licenseIssued;
            return subscriptionDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                if (_CustomerID != value)
                {
                    OnCustomerIDChanging(value);
                    ReportPropertyChanging("CustomerID");
                    _CustomerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CustomerID");
                    OnCustomerIDChanged();
                }
            }
        }
        private global::System.Int32 _CustomerID;
        partial void OnCustomerIDChanging(global::System.Int32 value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SubscriptionDate
        {
            get
            {
                return _SubscriptionDate;
            }
            set
            {
                OnSubscriptionDateChanging(value);
                ReportPropertyChanging("SubscriptionDate");
                _SubscriptionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubscriptionDate");
                OnSubscriptionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _SubscriptionDate;
        partial void OnSubscriptionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnSubscriptionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastLoginDate;
        partial void OnLastLoginDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LicenseExpiration
        {
            get
            {
                return _LicenseExpiration;
            }
            set
            {
                OnLicenseExpirationChanging(value);
                ReportPropertyChanging("LicenseExpiration");
                _LicenseExpiration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseExpiration");
                OnLicenseExpirationChanged();
            }
        }
        private Nullable<global::System.DateTime> _LicenseExpiration;
        partial void OnLicenseExpirationChanging(Nullable<global::System.DateTime> value);
        partial void OnLicenseExpirationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean LicenseIssued
        {
            get
            {
                return _LicenseIssued;
            }
            set
            {
                if (_LicenseIssued != value)
                {
                    OnLicenseIssuedChanging(value);
                    ReportPropertyChanging("LicenseIssued");
                    _LicenseIssued = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LicenseIssued");
                    OnLicenseIssuedChanged();
                }
            }
        }
        private global::System.Boolean _LicenseIssued;
        partial void OnLicenseIssuedChanging(global::System.Boolean value);
        partial void OnLicenseIssuedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TfcSub
        {
            get
            {
                return _TfcSub;
            }
            set
            {
                OnTfcSubChanging(value);
                ReportPropertyChanging("TfcSub");
                _TfcSub = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TfcSub");
                OnTfcSubChanged();
            }
        }
        private global::System.String _TfcSub;
        partial void OnTfcSubChanging(global::System.String value);
        partial void OnTfcSubChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NonTfcSub
        {
            get
            {
                return _NonTfcSub;
            }
            set
            {
                OnNonTfcSubChanging(value);
                ReportPropertyChanging("NonTfcSub");
                _NonTfcSub = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NonTfcSub");
                OnNonTfcSubChanged();
            }
        }
        private global::System.String _NonTfcSub;
        partial void OnNonTfcSubChanging(global::System.String value);
        partial void OnNonTfcSubChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GESCustomerID
        {
            get
            {
                return _GESCustomerID;
            }
            set
            {
                OnGESCustomerIDChanging(value);
                ReportPropertyChanging("GESCustomerID");
                _GESCustomerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GESCustomerID");
                OnGESCustomerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _GESCustomerID;
        partial void OnGESCustomerIDChanging(Nullable<global::System.Int32> value);
        partial void OnGESCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> TFCDirect
        {
            get
            {
                return _TFCDirect;
            }
            set
            {
                OnTFCDirectChanging(value);
                ReportPropertyChanging("TFCDirect");
                _TFCDirect = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TFCDirect");
                OnTFCDirectChanged();
            }
        }
        private Nullable<global::System.Boolean> _TFCDirect;
        partial void OnTFCDirectChanging(Nullable<global::System.Boolean> value);
        partial void OnTFCDirectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> TFCKo
        {
            get
            {
                return _TFCKo;
            }
            set
            {
                OnTFCKoChanging(value);
                ReportPropertyChanging("TFCKo");
                _TFCKo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TFCKo");
                OnTFCKoChanged();
            }
        }
        private Nullable<global::System.Boolean> _TFCKo;
        partial void OnTFCKoChanging(Nullable<global::System.Boolean> value);
        partial void OnTFCKoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DealerID
        {
            get
            {
                return _DealerID;
            }
            set
            {
                OnDealerIDChanging(value);
                ReportPropertyChanging("DealerID");
                _DealerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DealerID");
                OnDealerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DealerID;
        partial void OnDealerIDChanging(Nullable<global::System.Int32> value);
        partial void OnDealerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DealerCode
        {
            get
            {
                return _DealerCode;
            }
            set
            {
                OnDealerCodeChanging(value);
                ReportPropertyChanging("DealerCode");
                _DealerCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DealerCode");
                OnDealerCodeChanged();
            }
        }
        private global::System.String _DealerCode;
        partial void OnDealerCodeChanging(global::System.String value);
        partial void OnDealerCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DealerDateAdded
        {
            get
            {
                return _DealerDateAdded;
            }
            set
            {
                OnDealerDateAddedChanging(value);
                ReportPropertyChanging("DealerDateAdded");
                _DealerDateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DealerDateAdded");
                OnDealerDateAddedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DealerDateAdded;
        partial void OnDealerDateAddedChanging(Nullable<global::System.DateTime> value);
        partial void OnDealerDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdated
        {
            get
            {
                return _DateUpdated;
            }
            set
            {
                OnDateUpdatedChanging(value);
                ReportPropertyChanging("DateUpdated");
                _DateUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdated");
                OnDateUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdated;
        partial void OnDateUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.String _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.String value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GOMSID
        {
            get
            {
                return _GOMSID;
            }
            set
            {
                OnGOMSIDChanging(value);
                ReportPropertyChanging("GOMSID");
                _GOMSID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GOMSID");
                OnGOMSIDChanged();
            }
        }
        private Nullable<global::System.Int32> _GOMSID;
        partial void OnGOMSIDChanging(Nullable<global::System.Int32> value);
        partial void OnGOMSIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ABSNowModel", "CustomerSubscriptionDetail", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("ABSNowModel.CustomerSubscriptionDetail", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("ABSNowModel.CustomerSubscriptionDetail", "Customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("ABSNowModel.CustomerSubscriptionDetail", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("ABSNowModel.CustomerSubscriptionDetail", "Customer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ABSNowModel", Name="TFCNowRetailMigrationID")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TFCNowRetailMigrationID : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TFCNowRetailMigrationID object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static TFCNowRetailMigrationID CreateTFCNowRetailMigrationID(global::System.Int32 id)
        {
            TFCNowRetailMigrationID tFCNowRetailMigrationID = new TFCNowRetailMigrationID();
            tFCNowRetailMigrationID.ID = id;
            return tFCNowRetailMigrationID;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubscriptionType
        {
            get
            {
                return _SubscriptionType;
            }
            set
            {
                OnSubscriptionTypeChanging(value);
                ReportPropertyChanging("SubscriptionType");
                _SubscriptionType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SubscriptionType");
                OnSubscriptionTypeChanged();
            }
        }
        private global::System.String _SubscriptionType;
        partial void OnSubscriptionTypeChanging(global::System.String value);
        partial void OnSubscriptionTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GOMSInternalID
        {
            get
            {
                return _GOMSInternalID;
            }
            set
            {
                OnGOMSInternalIDChanging(value);
                ReportPropertyChanging("GOMSInternalID");
                _GOMSInternalID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GOMSInternalID");
                OnGOMSInternalIDChanged();
            }
        }
        private Nullable<global::System.Int32> _GOMSInternalID;
        partial void OnGOMSInternalIDChanging(Nullable<global::System.Int32> value);
        partial void OnGOMSInternalIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TFCnowPackageID
        {
            get
            {
                return _TFCnowPackageID;
            }
            set
            {
                OnTFCnowPackageIDChanging(value);
                ReportPropertyChanging("TFCnowPackageID");
                _TFCnowPackageID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TFCnowPackageID");
                OnTFCnowPackageIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TFCnowPackageID;
        partial void OnTFCnowPackageIDChanging(Nullable<global::System.Int32> value);
        partial void OnTFCnowPackageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ABSNowModel", Name="TFCNowRetailMigrationTFCTV")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TFCNowRetailMigrationTFCTV : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TFCNowRetailMigrationTFCTV object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="isMigrated">Initial value of the IsMigrated property.</param>
        public static TFCNowRetailMigrationTFCTV CreateTFCNowRetailMigrationTFCTV(global::System.Int32 id, global::System.Int32 isMigrated)
        {
            TFCNowRetailMigrationTFCTV tFCNowRetailMigrationTFCTV = new TFCNowRetailMigrationTFCTV();
            tFCNowRetailMigrationTFCTV.ID = id;
            tFCNowRetailMigrationTFCTV.IsMigrated = isMigrated;
            return tFCNowRetailMigrationTFCTV;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubscriptionType
        {
            get
            {
                return _SubscriptionType;
            }
            set
            {
                OnSubscriptionTypeChanging(value);
                ReportPropertyChanging("SubscriptionType");
                _SubscriptionType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SubscriptionType");
                OnSubscriptionTypeChanged();
            }
        }
        private global::System.String _SubscriptionType;
        partial void OnSubscriptionTypeChanging(global::System.String value);
        partial void OnSubscriptionTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LicenseEndDate
        {
            get
            {
                return _LicenseEndDate;
            }
            set
            {
                OnLicenseEndDateChanging(value);
                ReportPropertyChanging("LicenseEndDate");
                _LicenseEndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseEndDate");
                OnLicenseEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LicenseEndDate;
        partial void OnLicenseEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLicenseEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TFCnowPackageID
        {
            get
            {
                return _TFCnowPackageID;
            }
            set
            {
                OnTFCnowPackageIDChanging(value);
                ReportPropertyChanging("TFCnowPackageID");
                _TFCnowPackageID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TFCnowPackageID");
                OnTFCnowPackageIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TFCnowPackageID;
        partial void OnTFCnowPackageIDChanging(Nullable<global::System.Int32> value);
        partial void OnTFCnowPackageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IsMigrated
        {
            get
            {
                return _IsMigrated;
            }
            set
            {
                OnIsMigratedChanging(value);
                ReportPropertyChanging("IsMigrated");
                _IsMigrated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsMigrated");
                OnIsMigratedChanged();
            }
        }
        private global::System.Int32 _IsMigrated;
        partial void OnIsMigratedChanging(global::System.Int32 value);
        partial void OnIsMigratedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ABSNowModel", Name="vwCustomerLicensePurchased")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vwCustomerLicensePurchased : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vwCustomerLicensePurchased object.
        /// </summary>
        /// <param name="licensePurchasedID">Initial value of the LicensePurchasedID property.</param>
        /// <param name="packageID">Initial value of the PackageID property.</param>
        /// <param name="customerID">Initial value of the CustomerID property.</param>
        /// <param name="licenseEndDate">Initial value of the LicenseEndDate property.</param>
        /// <param name="transactionID">Initial value of the TransactionID property.</param>
        public static vwCustomerLicensePurchased CreatevwCustomerLicensePurchased(global::System.Guid licensePurchasedID, global::System.Int32 packageID, global::System.Int32 customerID, global::System.DateTime licenseEndDate, global::System.String transactionID)
        {
            vwCustomerLicensePurchased vwCustomerLicensePurchased = new vwCustomerLicensePurchased();
            vwCustomerLicensePurchased.LicensePurchasedID = licensePurchasedID;
            vwCustomerLicensePurchased.PackageID = packageID;
            vwCustomerLicensePurchased.CustomerID = customerID;
            vwCustomerLicensePurchased.LicenseEndDate = licenseEndDate;
            vwCustomerLicensePurchased.TransactionID = transactionID;
            return vwCustomerLicensePurchased;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> idx
        {
            get
            {
                return _idx;
            }
            set
            {
                OnidxChanging(value);
                ReportPropertyChanging("idx");
                _idx = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idx");
                OnidxChanged();
            }
        }
        private Nullable<global::System.Int64> _idx;
        partial void OnidxChanging(Nullable<global::System.Int64> value);
        partial void OnidxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LicensePurchasedID
        {
            get
            {
                return _LicensePurchasedID;
            }
            set
            {
                if (_LicensePurchasedID != value)
                {
                    OnLicensePurchasedIDChanging(value);
                    ReportPropertyChanging("LicensePurchasedID");
                    _LicensePurchasedID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LicensePurchasedID");
                    OnLicensePurchasedIDChanged();
                }
            }
        }
        private global::System.Guid _LicensePurchasedID;
        partial void OnLicensePurchasedIDChanging(global::System.Guid value);
        partial void OnLicensePurchasedIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PackageID
        {
            get
            {
                return _PackageID;
            }
            set
            {
                if (_PackageID != value)
                {
                    OnPackageIDChanging(value);
                    ReportPropertyChanging("PackageID");
                    _PackageID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PackageID");
                    OnPackageIDChanged();
                }
            }
        }
        private global::System.Int32 _PackageID;
        partial void OnPackageIDChanging(global::System.Int32 value);
        partial void OnPackageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                if (_CustomerID != value)
                {
                    OnCustomerIDChanging(value);
                    ReportPropertyChanging("CustomerID");
                    _CustomerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CustomerID");
                    OnCustomerIDChanged();
                }
            }
        }
        private global::System.Int32 _CustomerID;
        partial void OnCustomerIDChanging(global::System.Int32 value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LicenseEndDate
        {
            get
            {
                return _LicenseEndDate;
            }
            set
            {
                if (_LicenseEndDate != value)
                {
                    OnLicenseEndDateChanging(value);
                    ReportPropertyChanging("LicenseEndDate");
                    _LicenseEndDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LicenseEndDate");
                    OnLicenseEndDateChanged();
                }
            }
        }
        private global::System.DateTime _LicenseEndDate;
        partial void OnLicenseEndDateChanging(global::System.DateTime value);
        partial void OnLicenseEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransactionID
        {
            get
            {
                return _TransactionID;
            }
            set
            {
                if (_TransactionID != value)
                {
                    OnTransactionIDChanging(value);
                    ReportPropertyChanging("TransactionID");
                    _TransactionID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TransactionID");
                    OnTransactionIDChanged();
                }
            }
        }
        private global::System.String _TransactionID;
        partial void OnTransactionIDChanging(global::System.String value);
        partial void OnTransactionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Recency
        {
            get
            {
                return _Recency;
            }
            set
            {
                OnRecencyChanging(value);
                ReportPropertyChanging("Recency");
                _Recency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Recency");
                OnRecencyChanged();
            }
        }
        private Nullable<global::System.Int64> _Recency;
        partial void OnRecencyChanging(Nullable<global::System.Int64> value);
        partial void OnRecencyChanged();

        #endregion

    
    }

    #endregion

    
}
