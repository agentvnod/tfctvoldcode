(function (h) { if (h.fn.dotdotdot) { return } h.fn.dotdotdot = function (v) { if (this.length == 0) { b(true, 'No element found for "' + this.selector + '".'); return this } if (this.length > 1) { return this.each(function () { h(this).dotdotdot(v) }) } var r = this; if (r.data("dotdotdot")) { r.trigger("destroy.dot") } r.bind_events = function () { r.bind("update.dot", function (y, B) { y.preventDefault(); y.stopPropagation(); t.maxHeight = (typeof t.height == "number") ? t.height : o(r); t.maxHeight += t.tolerance; if (typeof B != "undefined") { if (typeof B == "string" || B instanceof HTMLElement) { B = h("<div />").append(B).contents() } if (B instanceof h) { w = B } } s = r.wrapInner('<div class="dotdotdot" />').children(); s.empty().append(w.clone(true)).css({ height: "auto", width: "auto", border: "none", padding: 0, margin: 0 }); var A = false, x = false; if (q.afterElement) { A = q.afterElement.clone(true); q.afterElement.remove() } if (j(s, t)) { if (t.wrap == "children") { x = d(s, t, A) } else { x = m(s, r, s, t, A) } } s.replaceWith(s.contents()); s = null; if (h.isFunction(t.callback)) { t.callback.call(r[0], x, w) } q.isTruncated = x; return x }).bind("isTruncated.dot", function (y, x) { y.preventDefault(); y.stopPropagation(); if (typeof x == "function") { x.call(r[0], q.isTruncated) } return q.isTruncated }).bind("originalContent.dot", function (y, x) { y.preventDefault(); y.stopPropagation(); if (typeof x == "function") { x.call(r[0], w) } return w }).bind("destroy.dot", function (x) { x.preventDefault(); x.stopPropagation(); r.unwatch().unbind_events().empty().append(w).data("dotdotdot", false) }); return r }; r.unbind_events = function () { r.unbind(".dot"); return r }; r.watch = function () { r.unwatch(); if (t.watch == "window") { var A = h(window), y = A.width(), x = A.height(); A.bind("resize.dot" + q.dotId, function () { if (y != A.width() || x != A.height() || !t.windowResizeFix) { y = A.width(); x = A.height(); if (p) { clearInterval(p) } p = setTimeout(function () { r.trigger("update.dot") }, 10) } }) } else { u = i(r); p = setInterval(function () { var B = i(r); if (u.width != B.width || u.height != B.height) { r.trigger("update.dot"); u = i(r) } }, 100) } return r }; r.unwatch = function () { h(window).unbind("resize.dot" + q.dotId); if (p) { clearInterval(p) } return r }; var w = r.contents(), t = h.extend(true, {}, h.fn.dotdotdot.defaults, v), q = {}, u = {}, p = null, s = null; q.afterElement = c(t.after, r); q.isTruncated = false; q.dotId = k++; r.data("dotdotdot", true).bind_events().trigger("update.dot"); if (t.watch) { r.watch() } return r }; h.fn.dotdotdot.defaults = { ellipsis: "... ", wrap: "word", lastCharacter: { remove: [" ", ",", ";", ".", "!", "?"], noEllipsis: [] }, tolerance: 0, callback: null, after: null, height: null, watch: false, windowResizeFix: true, debug: false }; var k = 1; function d(s, w, v) { var u = s.children(), p = false; s.empty(); for (var r = 0, q = u.length; r < q; r++) { var t = u.eq(r); s.append(t); if (v) { s.append(v) } if (j(s, w)) { t.remove(); p = true; break } else { if (v) { v.remove() } } } return p } function m(s, r, C, t, q) { var x = s.contents(), y = false; s.empty(); var B = "table, thead, tbody, tfoot, tr, col, colgroup, object, embed, param, ol, ul, dl, select, optgroup, option, textarea, script, style"; for (var A = 0, v = x.length; A < v; A++) { if (y) { break } var w = x[A], p = h(w); if (typeof w == "undefined") { continue } s.append(p); if (q) { var u = (s.is(B)) ? "after" : "append"; s[u](q) } if (w.nodeType == 3) { if (j(C, t)) { y = e(p, r, C, t, q) } } else { y = m(p, r, C, t, q) } if (!y) { if (q) { q.remove() } } } return y } function e(q, s, E, t, p) { var C = false, A = q[0]; if (typeof A == "undefined") { return false } var B = (t.wrap == "letter") ? "" : " ", D = g(A).split(B), x = -1, F = -1, y = 0, r = D.length - 1; while (y <= r) { var u = Math.floor((y + r) / 2); if (u == F) { break } F = u; a(A, D.slice(0, F + 1).join(B) + t.ellipsis); if (!j(E, t)) { x = F; y = F } else { r = F } } if (x != -1) { var w = D.slice(0, x + 1).join(B); C = true; while (h.inArray(w.slice(-1), t.lastCharacter.remove) > -1) { w = w.slice(0, -1) } if (h.inArray(w.slice(-1), t.lastCharacter.noEllipsis) < 0) { w += t.ellipsis } a(A, w) } else { var v = q.parent(); q.remove(); $n = v.contents().eq(-1); C = e($n, s, E, t, p) } return C } function j(q, p) { return q.innerHeight() > p.maxHeight } function i(p) { return { width: p.innerWidth(), height: p.innerHeight()} } function a(q, p) { if (q.innerText) { q.innerText = p } else { if (q.nodeValue) { q.nodeValue = p } else { if (q.textContent) { q.textContent = p } } } } function g(p) { if (p.innerText) { return p.innerText } else { if (p.nodeValue) { return p.nodeValue } else { if (p.textContent) { return p.textContent } else { return "" } } } } function c(p, q) { if (typeof p == "undefined") { return false } if (!p) { return false } if (typeof p == "string") { p = h(p, q); return (p.length) ? p : false } if (typeof p == "object") { return (typeof p.jquery == "undefined") ? false : p } return false } function o(r) { var s = r.innerHeight(), q = ["paddingTop", "paddingBottom"]; for (z = 0, l = q.length; z < l; z++) { var p = parseInt(r.css(q[z]), 10); if (isNaN(p)) { p = 0 } s -= p } return s } function b(q, p) { if (!q) { return false } if (typeof p == "string") { p = "dotdotdot: " + p } else { p = ["dotdotdot:", p] } if (window.console && window.console.log) { window.console.log(p) } return false } var n = h.fn.html; h.fn.html = function (p) { if (typeof p != "undefined") { if (this.data("dotdotdot")) { if (typeof p != "function") { return this.trigger("update", [p]) } } return n.call(this, p) } return n.call(this) }; var f = h.fn.text; h.fn.text = function (q) { if (typeof q != "undefined") { if (this.data("dotdotdot")) { var p = h("<div />"); p.text(q); q = p.html(); p.remove(); return this.trigger("update", [q]) } return f.call(this, q) } return f.call(this) } })(jQuery);