@using TFCTV.Helpers
@model IPTV2_Model.Show
@{
    Layout = "~/Views/Shared/_TFCTVBlue.cshtml";


    ViewBag.Title = String.Format("{0} - TFC.tv", Model.Description);
    string trackingLabel = String.Format("{0}|{1}|{2}|{3}|{4}|{5}", Html.Action("GetMovieEpisodeId", Model.CategoryId), Model.Description, String.Empty, ViewBag.CategoryType, ViewBag.EmailAddress, Request.GetUserHostAddressFromCloudflare());

    string countryCode = ViewBag.CountryCode;

    bool ShowFreeTrialImage = ViewBag.ShowFreeTrialImage;

    bool IsUserEntitled = false;

    ViewDataDictionary dictionary = null;
    TFCTV.Helpers.UserData userData = TFCTV.Helpers.MyUtility.GetUserPrivacySetting(null);

    var MovieEpisodeId = Html.Action("GetMovieEpisodeId", Model.CategoryId);
    string TFCTvDownloadPlayerFullUrl = String.Empty;
    if (MyUtility.isUserLoggedIn())
    {
        dictionary = new ViewDataDictionary();
        bool Loved = false;
        if (ViewBag.Loved != null)
        {
            Loved = (bool)ViewBag.Loved;
        }
        dictionary.Add(new KeyValuePair<string, object>("hasLoved", Loved));
        var userId = new Guid(User.Identity.Name);
        userData = TFCTV.Helpers.MyUtility.GetUserPrivacySetting(userId);
        dictionary.Add(new KeyValuePair<string, object>("userData", userData));

        if (GlobalConfig.IsDownloadPlayerEnabled)
        {
            string TFCTvPlayerEncryptedToken = MyUtility.Encrypt(String.Format("{0}&{1}", MovieEpisodeId.ToString(), User.Identity.Name), GlobalConfig.TFCTVPlayerDownloadSalt);
            TFCTvDownloadPlayerFullUrl = String.Format("{0}{1}", GlobalConfig.TFCTvDownloadPlayerUrl, HttpUtility.UrlEncode(TFCTvPlayerEncryptedToken));
        }
    }

    //Check for IsUserEntitled
    try
    {
        IsUserEntitled = (bool)ViewBag.IsUserEntitled;
    }
    catch (Exception) { }

    int EpisodeId = 0;
    try
    {
        EpisodeId = Convert.ToInt32(MovieEpisodeId.ToString());
    }
    catch (Exception) { }
    //Build PlayerContorlBarModel
    var playerControlBarModel = new TFCTV.Models.PlayerControlBarModel() { EpisodeId = EpisodeId, IsUserEntitled = IsUserEntitled, TFCTvDownloadPlayerFullUrl = TFCTvDownloadPlayerFullUrl };

    //ShareMedia
    string title = String.Empty;
    var image = Html.ContentBuilder(Url, "/content/images/blank-image.jpg").ToString();
    try
    {
        title = Model.Description;
        image = String.Format("{0}{1}/{2}", GlobalConfig.ShowImgPath, Model.CategoryId, Model.ImagePoster);
    }
    catch (Exception) { }

    string parentCategories = ContextHelper.GetShowParentCategories(Model.CategoryId);
    
}
<div id="mainBody">
    <div class="transparentBg">
        <div id="viewingproblem">
            If you are having problems viewing this video, please visit our @Html.ActionLink("Help Center", "Question", "Help", new { id = MyUtility.GetQuestionId(Request) }, null).<br />
            Is your video buffering? @Html.ActionLink("Check your bandwidth", "CheckYourBandwidth", "Help").</div>
        <div class="clear breakSmall">
        </div>
        <div class="genericHeader">
            <div id="genericHeader_header">
                <div id="headerTitle" class="sectionHeaderTitle">
                    @Html.DisplayFor(model => model.Description)
                </div>
                <div id="headerCategoryName" class="sectionHeader">
                </div>
            </div>
        </div>
        <div class="clear">
        </div>
        <div id="aboutTheShow">
            <div class="floatLeft">
                <div id="aboutPoster">
                    <div class="floatLeft">
                        @{if (!String.IsNullOrEmpty(Model.ImagePoster))
                          {
                            <img width="182" alt="" border="0" height="245" src="@String.Format("{0}{1}/{2}", GlobalConfig.ShowImgPath, Model.CategoryId, Model.ImagePoster)" />
                          }

                          else
                          {
                            @Html.ImageBuilder(Url, "blank-image.jpg", new { width = 182, height = 245 })
                          }
                        }
                    </div>
                    <div id="aboutWriteUp">
                        <p class="showSynopsis">
                            @Html.DisplayFor(model => model.Blurb)
                        </p>
                        <div class="clear">
                        </div>
                        @Html.Action("GetCasts", new { id = Model.CategoryId })
                        <div class="user-reaction">
                            @Html.Partial("_SharePartial", Model) @Html.Partial("_LovePartial", Model, dictionary)
                        </div>
                        <div id="ratingDiv">
                        </div>
                    </div>
                    <div class="clear">
                    </div>
                </div>
            </div>
            <div id="showAds">
                <div id="adBlock" style="width: 300px; height: 250px; position: relative; top: 30px;
                    left: -30px;">
                    @{if (!MyUtility.IsAdRestricted(Model.CategoryId))
                      {
                        <!-- Google MRec -->
                        <script type='text/javascript'>
                            GA_googleFillSlot("TFCtv_MediumRectangle_300x250");
                        </script>  
                      }
                    }
                </div>
            </div>
            <div class="clear">
            </div>
            @if (IsUserEntitled)
            {
                //with entitlements
                if (GlobalConfig.IsUserEntitlementViewOnPageEnabled)
                {
                @Html.Action("GetUserEntitlements", "Show", new { categoryId = Model.CategoryId, countryCode = countryCode })
                }
            }
            else
            {
                //no entitlements
                @Html.Action("GetPackages2", "Show", new { showPackageProductPrices = ViewBag.ShowPackageProductPrices })
            }
            <div id="ratings-and-review">
                @Html.Partial("_ShowsRatingsAndReviews", Model)
            </div>
        </div>
        <div class="apple_overlay" id="bs_overlay">
            <!-- the external content is loaded inside this tag -->
            <div class="contentWrap">
            </div>
        </div>
        <div class="contentMessage" style="color: #000">
        </div>
    </div>
    <div id="lighstout">
    </div>
    <div id="getFlash" class="hideElement">
        <div id="playerFail">
            @Html.ImageBuilder(Url, "flashplayer_100x100.jpg")
            <h3>
                Get Adobe Flash Player</h3>
            <p>
                You must have the latest Flash player installed. You can <a id="goGetFlash" href="http://get.adobe.com/flashplayer/"
                    target="_blank">download it here</a>.
            </p>
            <br clear="all" />
        </div>
    </div>
    <div id="subscribePromptcontainer_1" class="hideElement">
        <div id="subscribePrompt_1">
            <div>
                @{if (!MyUtility.isUserLoggedIn())
                  {
                    <a href="#" id="gw-signin">@Html.ImageBuilder(Url, "go-watch-signin.png")</a> <a href="@Url.Action("Register", "User")">@Html.ImageBuilder(Url, "go-watch-register.png")</a>  
                    <script type="text/javascript">
                        $('#gw-signin').live('click', function () {
                            $('#signin').click();
                            return false;
                        });
                    </script>
                  }
                  else
                  {
                      if (ShowFreeTrialImage)
                      {
                    <text>
                    <script type="text/javascript">
                        $("#subscribePrompt_1").css("background", "url('@Html.ContentBuilder(Url, "content/images/subscribe-now-freetrial1.jpg")')");
                    </script>
                    </text>  
                      }
                      else
                      {
                    <text>
                    <script type="text/javascript">
                        $("#subscribePrompt_1").css("background", "url('@Html.ContentBuilder(Url, "content/images/subscribe-watch-new.jpg")')");
                    </script>
                    </text>  
                      }                                                                               
                    @Html.Action("GetLowestPackages2", "Show", new { showPackageProductPrices = ViewBag.ShowPackageProductPrices })
                  
                  }
                }
            </div>
        </div>
    </div>
    <div id="not-available" class="hideElement">
        @Html.ImageBuilder(Url, "this-video-is-coming-soon.png", new { width = 940, height = 406, border = 0 })
        @*<img border="0" src="http://cdnassets.tfc.tv/content/images/no-video-found.jpg" />*@
    </div>
</div>
<input type="hidden" value="0" id="bought" />
@section Stylesheet {
    <!--[if IE ]>
        @Html.CssBuilder(Url, "ie_ratingsreviews.css")
    <![endif]-->
    @Html.CssBuilder(Url, "episode.css")
    @Html.CssBuilder(Url, "episode.1.css")
    @Html.CssBuilder(Url, "ratingsreviews-1.1.css")
    @Html.CssBuilder(Url, "getpackage.css")
    @Html.CssBuilder(Url, "cast.css")
    @Html.CssBuilder(Url, "payment.css")
    @Html.CssBuilder(Url, "overlay-apple.css")
    @Html.CssBuilder(Url, "tabs-no-images.css")
    @Html.CssBuilder(Url, "pkg.4.css")
    @Html.CssBuilder(Url, "player-menu.3.css")
    <meta property="og:url" content="@HttpContext.Current.Request.Url.AbsoluteUri"/>
    <meta property="og:title" content="@HttpUtility.JavaScriptStringEncode(Model.Description)"/>
    <meta property="og:description" content="@HttpUtility.JavaScriptStringEncode(Model.Blurb)"/>
    <meta property="og:type" content="Movie" />
    <meta property="og:image" content="@String.Format("{0}{1}/{2}", GlobalConfig.ShowImgPath, Model.CategoryId, Model.ImagePoster)"/>
    <meta property="og:site_name" content="TFC.tv" />
    <meta name="description" content="@HttpUtility.JavaScriptStringEncode(Model.Blurb)" />
}
@section JScript {
    @Html.JsBuilder(Url, "packages.js")
    <!-- Google Ads -->
    <script type='text/javascript' src='http://partner.googleadservices.com/gampad/google_service.js'>
    </script>
    <script type='text/javascript'>
        GS_googleAddAdSenseService("ca-pub-1805244726360577");
        GS_googleEnableAllServices();
    </script>
    <script type="text/javascript">
        GA_googleAddAttr("Show", "@Model.CategoryId");
        GA_googleAddAttr("Category", "@parentCategories");
    </script>
    <script type='text/javascript'>
        GA_googleAddSlot("ca-pub-1805244726360577", "TFCtv_MediumRectangle_300x250");
    </script>
    <script type='text/javascript'>
        GA_googleFetchAds();
    </script>
    <!-- End of Google Ads -->
}
@section featureBody {
    <br />
    <br />
    <br />
    <div id="featureBanner">
        <div id="playerContainer">
        </div>
        @Html.Partial("_PlayerControlBar", playerControlBarModel)
    </div>
}
@section JScriptBottom {
    @Html.Partial("FlowPlayerPartial", false)
    @Html.JsBuilder(Url, "date.js")
    @Html.JsBuilder(Url, "wishlist.js")
    @Html.JsBuilder(Url, "package_overlay.js")
    <script type="text/javascript">    
        var userActionURL = '@HttpContext.Current.Request.Url.AbsoluteUri';
        var playerContainer = 'playerContainer';   
        var label = '@trackingLabel';
        var eid = null;
        var sid = null;
        var playbackId = @MovieEpisodeId;
        var playbackType = 1; // Episode
        var flow = {}; var config = {};
        var categoryType = '@ViewBag.categoryType';
        var time = true;
        var isClip = false;
    </script>
    <!-- ShareMedia -->
    <script type="text/javascript">
        var gmessage = 'I just watched @HttpUtility.JavaScriptStringEncode(Model.Description)';
        var gtitle = '@HttpUtility.JavaScriptStringEncode(title)';
        var gdescription = '@HttpUtility.JavaScriptStringEncode(Model.Blurb)';
        var gimg = '@image';
        var ghref = '@HttpContext.Current.Request.Url.AbsoluteUri';
    </script>
    <!-- media-player -->
    <script type="text/javascript">
        //CreatePlayer()
        function CreatePlayer(uri) {
            $.ajax({
                url: uri
                    , dataType: 'json'
                    , success: function (data) {
                        if (data.errorCode == 0) {
                            $.getScript(playerJS).done(function () {
                                var akObj = { url: Afp };
                                if (data.data.SubClip != null) {
                                    var subClip = { clipBegin: data.data.SubClip.Start, clipEnd: data.data.SubClip.End };
                                    akObj = { url: Afp, subClip: subClip };
                                    time = false;
                                    isClip = true;
                                    gmessage = 'I just watched a preview of @HttpUtility.JavaScriptStringEncode(Model.Description)';
                                }
                                var config = { container: playerContainer, playerSWF: playerSWF, expressInstallSWF: expressInstallSWF, playButtonURL: playButtonURL, logoURL: logoURL, controllerSWF: controllerSWF, csmaPluginSWF: csmaPluginSWF, csmaConfig: csmaConfig, apObj: akObj, scaling: 'fit', url: data.data.Url, categoryType: categoryType, label: label, sid: sid, eid: eid, isClip: isClip, trackerSWF: trackerSWF, trackerID: trackerID, userActionURL: userActionURL, uri: uri, time: time, ipadUrl: data.data.Url, allowShare: true, playbackType: playbackType, playbackId: playbackId, analyticsSWF: analyticsSWF, subscribe: data.data.PromptToSubscribe, gmessage: gmessage, gtitle: gtitle, gdescription: gdescription, gimg: gimg, ghref: ghref, streamType: isSelectedMode };
                                flow.Player.Create(config);
                            });
                        }
                        else if (data.errorCode == -4000) {
                            gigya.socialize.logout({ callback: function (response) {
                                location.href = '@GlobalConfig.MultipleLoginRedirectedUrl';
                            }
                            });
                            location.href = '@GlobalConfig.MultipleLoginRedirectedUrl';
                        }
                        else if (data.errorCode == -704) {
                            $('#' + playerContainer).append($('#subscribePromptcontainer_1').html());
                            if ($f() == undefined) {
                                $('#subscribePrompt_1').css('margin-top', '0px');
                            }
                        }
                        else {
                            $('.player-menu-container').remove();
                            $('#' + playerContainer).html($('#not-available').html());
                        }
                    }
            });
        }
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            var uri = '/Ajax/GetMedia/@MovieEpisodeId';
            CreatePlayer(uri);
        });
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            $(".product_container").hide();

            $(".packageproduct_container img").click(function () {
                $("#" + $(this).attr('prdid')).slideToggle("slow");
            });

            $('#epList').click(function () {
                var shouldScroll = $('#aboutEpisodes').is(':visible');
                $('#aboutEpisodes').slideToggle('slow'); if (!shouldScroll) scrollTo('#aboutEpisodes');
                return false;
            });

            $('#lighstout').css('height', ($(window).height() * 2.2));
            $(window).live('resize', function () { $('#lighstout').css('height', ($(window).height() * 2.2)); });



            $('#clickToSubscribe').live('click', function () {
                scrollTo('#aboutTheShow');
                return false;
            });
        });
    </script>
}
