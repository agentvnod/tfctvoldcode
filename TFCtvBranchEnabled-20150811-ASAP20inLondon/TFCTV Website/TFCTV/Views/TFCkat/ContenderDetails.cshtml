@using TFCTV.Helpers
@model IPTV2_Model.Celebrity
@{
    ViewBag.Title = String.Format("{0} - TFCkat - TFC.tv", Model.FullName);
    Layout = "~/Views/Shared/_TFCTVBlue.cshtml";

    ViewDataDictionary dictionary = null;
    TFCTV.Helpers.UserData userData = TFCTV.Helpers.MyUtility.GetUserPrivacySetting(null);

    if (MyUtility.isUserLoggedIn())
    {
        dictionary = new ViewDataDictionary();
        bool Loved = false;
        if (ViewBag.Loved != null)
        {
            Loved = (bool)ViewBag.Loved;
        }
        dictionary.Add(new KeyValuePair<string, object>("hasLoved", Loved));
        var userId = new Guid(User.Identity.Name);
        userData = TFCTV.Helpers.MyUtility.GetUserPrivacySetting(userId);
        dictionary.Add(new KeyValuePair<string, object>("userData", userData));

    }
}
<br />
<br />
<div>
    <div style="width: 940px; display: table; margin: 0 auto;">
        <div style="width: 940px; height: 141px; background-color: #fff;">
            <img src="http://cdnassets.tfc.tv/content/images/banners/tfckat2013.png" style="z-index: -11;"
                width="940" height="141" title="TFCkat" alt="TFCkat" />
        </div>
        <div class="transparentBg">
            <div id="dTopLinksFour" style="display: table; margin: 0 auto;">
                @Html.ActionLink("MAIN PAGE", "Index", "TFCkat") | @Html.ActionLink("PROMO MECHANICS", "Mechanics", "TFCkat")
                | @Html.ActionLink("THE CONTENDERS", "Finalists", "TFCkat") | @Html.ActionLink("GRAND WINNERS", "GrandWinners", "TFCkat")</div>
            <div class="dLeft">
                <div class="dTeamLogo">
                    <img src="@Model.ImageUrl" alt="@Model.FullName Logo"/></div>
            </div>
            <div class="dRight">
                <div class="dTeamData">
                    <div class="dTeamNameHeader">
                        @Model.FullName</div>
                    @if (string.Compare(@Model.ChineseYear, "Middle East") == 0)
                    {
                        if (System.DateTime.Now<GlobalConfig.IsTFCkatMEVotingDisableDate)
                        {
                        <div>
                            @Html.Partial("_NewLovePartialDBCount", Model, dictionary)</div> 
                        <div style="padding-top: 6px; position: relative;">
                            @Html.Partial("_ShareBarPartial", Model)</div>
                        }
                        else
                        {
                        <div class="TFCKatLoves" style="left: 25px;">
                        </div>
                        <div class="TFCKatLovesNumber" style="left: 25px;">@Model.Weight</div>
                        <div style="width: 30px;">
                        </div> 
                        <div style="padding-top: 6px; position: relative; left: 35px;">
                            @Html.Partial("_ShareBarPartial", Model)</div>
                        }
                    }
                    else
                        if (GlobalConfig.IsTFCkatVotingEnabled)
                        {
                        <div>
                            @Html.Partial("_NewLovePartialDBCount", Model, dictionary)</div> 
                        <div style="padding-top: 6px; position: relative;">
                            @Html.Partial("_ShareBarPartial", Model)</div>
                        }
                        else
                        {
                        <div class="TFCKatLoves" style="left: 25px;">
                        </div>
                        <div class="TFCKatLovesNumber" style="left: 25px;">@Model.Weight</div>
                        <div style="width: 30px;">
                        </div> 
                        <div style="padding-top: 6px; position: relative; left: 35px;">
                            @Html.Partial("_ShareBarPartial", Model)</div>
                        }
                    <div class="clear breakStandard">
                    </div>
                    <div>
                        @(new HtmlString(Model.Description))<br />
                        <p>
                            Age: @Model.Height</p>
                        <p>
                            Hometown: @Model.ZodiacSign</p>
                        <p>
                            @Model.ChineseYear</p>
                    </div>
                </div>
                <div class="dGamesPlayed">
                    <div style="font-size: 16px; font-weight: bold; font-family: Arial Black">
                        @Model.FullName Videos</div>
                    <div id="celebrityEpisodes">
                        <div id="featuredItems_celebrityEpisodes" class="featuredItems">
                            <div class="itemListBody">
                                <div class="wrapper">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div id="ratings-and-review">
                @Html.Partial("_CelebritiesComments", Model)
            </div>
            <div class="clear">
            </div>
        </div>
    </div>
</div>
<div class="apple_overlay" style="width: 550px; height: 630px;" id="bs_overlay">
    <a class="close"></a>
    <!-- the external content is loaded inside this tag -->
    <div class="contentWrap">
    </div>
    <div class="contentMessage" style="color: #000">
    </div>
</div>
@section Stylesheet{
    @Html.CssBuilder(Url, "overlay-apple.css")
    @Html.CssBuilder(Url, "uaap.3.css")
    @Html.CssBuilder(Url, "tfckat.6.css")
    <meta property="og:url" content="@HttpContext.Current.Request.Url.AbsoluteUri" />
    <meta property="og:title" content="@HttpUtility.JavaScriptStringEncode(Model.FullName)" />
    <meta property="og:description" content="@HttpUtility.JavaScriptStringEncode(Model.Description)" />
    <meta property="og:type" content="UAAP Team" />
    <meta property="og:image" content="@Model.ImageUrl" />
    <meta property="og:site_name" content="TFC.tv" />
}
@section JScript {
    @Html.JsBuilder(Url, "jquery.cycle.all.js")
    @Html.JsBuilder(Url, "generateCarouselUAAP.js")
    @Html.JsBuilder(Url, "carouselGenerator.js")
    @Html.JsBuilder(Url, "package_overlay.js")
}
@section JScriptBottom {
    <script type="text/javascript">
        $(document).ready(function () {
            var features = [{ url: "/TFCKAT/GetContenderEpisodes/@Model.CelebrityId", type: "video", itemperslide: 3, container: "featuredItems_celebrityEpisodes", nid: "nav-celebEpisodes"}];
            $.each(features, function (x, item) {
                generateCarousel(item, true);
            });
            $('.watchnowtfckat', '.TFCKatLoves', '.TFCKatLovesNumber').live('click', function () {
                var epid = $(this).attr('rel');
                window.location.href = "/TFCkat/OnDemand/" + epid;
                return false;
            });
            //            $('#teamRoster').live("click", function () {
            //                $('.dRoster').addClass('dVisible');
            //                return false;
            //            });
            //            $('.dRoster').live("click", function () {
            //                $(this).toggleClass('dVisible');
            //                return false;
            //            });

            //            $('#teamSked').live("click", function () {
            //                $('.dGameSked').addClass('dVisible');
            //                return false;
            //            });
            //            $('.dGameSked').live("click", function () {
            //                $(this).toggleClass('dVisible');
            //                return false;
            //            });

            $('.bprod').live('click', function (event) {
                $(this).overlay({
                    mask: 'black',
                    fixed: false,
                    closeOnClick: false,
                    onBeforeLoad: function () {
                        $(".apple_overlay").width(640);
                        var co = this.getTrigger().data("container");

                        var te = $(co);
                        $('.contentWrap').append(te);
                        //$('.contentWrap').addClass(co);
                        //var wrap = this.getOverlay().find(".contentWrap");
                        //wrap.load(this.getTrigger().data("container"));
                        //                        wrap.load(this.getTrigger().data("container"));
                    },
                    onClose: function () {
                        $('#bs_overlay .contentWrap').empty();


                        //                        if ($('#bought').val() == 1) {
                        //                            window.location.href = document.URL;
                        //                        }
                    },
                    load: true
                });
                event.preventDefault();
            });
        });

        function generateCarousel(item, withToolTip) {
            $.ajax({
                url: item.url
                    , dataType: 'json'
                    , beforeSend: function () {
                        $('#spanner').addClass('feature_spanner');
                        $('#spanner').css('height', '130px');
                        $('#' + item.container + ' .itemListBody .wrapper').empty();
                        $('#' + item.container + ' .itemListBody .wrapper').prepend($('#ajax-loading').html());
                    }
                    , success: function (data) {
                        if (data.length > 0) {
                            $("." + item.container).show();
                            var list = new featureItem({
                                json_str: data, type: item.type, itemperslide: item.itemperslide, container: item.container, nid: item.nid
                            }).listing();

                            if (withToolTip)
                                $('.itemListing li img[title]').tooltip({ effect: 'fade',
                                    onShow: function () {
                                        var tip = this.getTip();
                                        setTimeout(function () {
                                            tip.hide();
                                        }, 10000);
                                    }
                                });
                        }

                    }
            });
        }

    </script>
}
