@model dynamic
@{
    var isLoggedIn = User.Identity.IsAuthenticated.ToString().ToLower();
    string type = String.Empty;
    object idx = 0;
    int attribActionId = (int)AnniversaryPromo.AnnivPromo_Sharing;
    string attribDescription;
    if (Model is IPTV2_Model.Episode)
    {
        var episode = (IPTV2_Model.Episode)Model;
        var show = episode.EpisodeCategories.FirstOrDefault(e => e.CategoryId != GlobalConfig.FreeTvCategoryId).Show;
        attribDescription = String.Format("You shared <a href=\"{0}\">{1}</a>", Request.Url.AbsoluteUri, String.Compare(episode.EpisodeCode, episode.EpisodeName, true) == 0 ? String.Format("{0} - {1}", show.Description, episode.DateAired.Value.ToString("MMMM d, yyyy")) : episode.EpisodeName);
    }
    else if (Model is IPTV2_Model.Show)
    {
        var show = (IPTV2_Model.Show)Model;
        attribDescription = String.Format("You shared <a href=\"{0}\">{1}</a>", Request.Url.AbsoluteUri, show.Description);

    }
    else if (Model is IPTV2_Model.Celebrity)
    {
        var celeb = (IPTV2_Model.Celebrity)Model;
        attribDescription = String.Format("You shared <a href=\"{0}\">{1}</a>", Request.Url.AbsoluteUri, String.Format("{0} {1}", celeb.FirstName, celeb.LastName));
    }
    else { attribDescription = String.Format("You shared <a href=\"{0}\">{1}</a>", Request.Url.AbsoluteUri, String.Format("{0} {1}", Model.Description)); }

}
<div id="socialShareContainer" style="position: relative; border: 0px;" class="floatLeft">
</div>
@*<div id="componentDiv" style="margin-top:-1px;">
</div>*@
<div class="hideElement dcover">
    @Html.ImageBuilder(Url, "transparent.png", new { width = 125, height = 27, @class = "cover", alt = "", style = "position: absolute; top: 0; left: 0; cursor: pointer;" })
</div>
<div id="naformS" class="hideElement">
    @Html.AntiForgeryToken()
    @Html.TextBox("naId", attribActionId, new { id = "naId", type = "hidden" })
    @Html.TextBox("naDescription", HttpUtility.HtmlEncode(attribDescription), new { id = "naDescription", type = "hidden" })
</div>
<script type="text/javascript">
	var socializePluginUrl = '@Html.ContentBuilder(Url, "scripts/socialize.4.nads.js")';    
	var title = '';
	var src = '';
	var url = '@HttpContext.Current.Request.Url.AbsoluteUri';
	//var shareParams = { container: 'componentDiv', shareButtons: 'share', showCounts: 'right', isLoggedIn: @isLoggedIn, userAction: null, postUrl: '/SocialEngagement/UpdateReaction' };    
	var shareParams =   
{
    container: 'socialShareContainer',
    showCounts: 'right', isLoggedIn: @isLoggedIn, userAction: null, postUrl: '/SocialEngagement/UpdateReaction',
    shareButtons: [
    {
        provider: 'Facebook',
        iconImgUp: '@Html.ContentBuilder(Url, "content/images/social/Facebook-Icon.png")'
    },
    {
        provider: 'Twitter',
        iconImgUp: '@Html.ContentBuilder(Url, "content/images/social/Twitter-Icon.png")'
    },
    {
        provider: 'Googleplus',
        iconImgUp: '@Html.ContentBuilder(Url, "content/images/social/Google-Plus-Icon.png")'
    },
    {
        provider: 'Share',
        iconImgUp: '@Html.ContentBuilder(Url, "content/images/social/Share-Icon.png")'

    }
    ],
    iconsOnly: true,
    showCounts: 'none',
    grayedOutScreenOpacity: 0,
    userAction: null,
    nattributes: null 
    //userAction: act
}
</script>
@{if (Model is IPTV2_Model.Episode)
  {
      var episode = (IPTV2_Model.Episode)Model;
      var show = episode.EpisodeCategories.FirstOrDefault(e => e.CategoryId != GlobalConfig.FreeTvCategoryId).Show;
      type = "episode";
      idx = episode.EpisodeId;
      var episode_title = String.Compare(episode.EpisodeCode, episode.EpisodeName, true) == 0 ? String.Format("{0} - {1}", show.Description, episode.DateAired.Value.ToString("MMMM d, yyyy")) : episode.EpisodeName;
    <text>
    <script type="text/javascript">
        title = '@episode_title';
        src = '@GlobalConfig.EpisodeImgPath@Model.EpisodeId/@Model.ImageAssets.ImageVideo';
        var userAction = {
            description: '@Ajax.JavaScriptStringEncode(episode.Synopsis)',
            title: title,
            url: url,
            actionname: "Read more",
            subtitle: '@GlobalConfig.baseUrl',
            src: src
        }
        //		var act = new gigya.socialize.UserAction();
        //		act.setUserMessage("This is the user message");
        //		act.setTitle(userAction.title);
        //		act.setLinkBack(userAction.url);
        //		act.setDescription(userAction.description);
        //		act.addActionLink("Watch this episode", userAction.url);
        //		act.addMediaItem({ type: 'image', src: userAction.src, href: userAction.url });
        
    </script>
    </text>
  }
  else if (Model is IPTV2_Model.Show)
  {
      var show = (IPTV2_Model.Show)Model;
      type = "show";
      idx = show.CategoryId;
    <text>
    <script type="text/javascript">
        title = '@Model.Description';
        src = '@GlobalConfig.ShowImgPath@Model.CategoryId/@Model.ImagePoster';
        var userAction = {
            description: '@Ajax.JavaScriptStringEncode(show.Blurb)',
            title: title,
            url: url,
            actionname: "Read more",
            subtitle: '@GlobalConfig.baseUrl',
            src: src
        }
    </script>
    </text>
  }
  else if (Model is IPTV2_Model.Celebrity)
  {
      var celebrity = (IPTV2_Model.Celebrity)Model;
      type = "celebrity";
      idx = celebrity.CelebrityId;
      var desc = MyUtility.Ellipsis(Model.Description, 350);
    <text>
    <script type="text/javascript">
        title = '@Model.FullName';
        src = '@Model.ImageUrl';
        var userAction = {
            description: '@Ajax.JavaScriptStringEncode(desc)',
            title: title,
            url: url,
            actionname: "Read more",
            subtitle: '@GlobalConfig.baseUrl',
            src: src
        }

    </script>
    </text>
  }
  else if (Model is IPTV2_Model.Channel)
  {
      var channel = (IPTV2_Model.Channel)Model;
      type = "Live";
      idx = channel.ChannelId;
      var channelSrc = Html.ContentBuilder(Url, "content/images/channels/" + channel.ChannelId + ".jpg").ToString();
    <text>
    <script type="text/javascript">
        title = '@Model.Description';
        src = '@channelSrc';
        var userAction = {
            description: '@Ajax.JavaScriptStringEncode(channel.Blurb)',
            title: title,
            url: url,
            actionname: "Read more",
            subtitle: '@GlobalConfig.baseUrl',
            src: src
        }
    </script>
    </text>
  }
  else if (Model is TFCTV.Models.Youtube.YoutubeAPISingleVideoResponse)
  {
      var youtube = (TFCTV.Models.Youtube.YoutubeAPISingleVideoResponse)Model;
      type = "youtube";
      idx = youtube.data.id;
      var youtubeSrc = youtube.data.thumbnail.sqDefault;
    <text>
    <script type="text/javascript">
        title = '@youtube.data.title';
        src = '@youtubeSrc';
        var userAction = {
            description: '@Ajax.JavaScriptStringEncode(youtube.data.description)',
            title: title,
            url: url,
            actionname: "Read more",
            subtitle: '@GlobalConfig.baseUrl',
            src: src
        }
    </script>
    </text>

  }
}
@*<script type="text/javascript">
shareParams.userAction = userAction;
        shareParams.userAction.actorUID = '@User.Identity.Name';
        shareParams.type = '@type';
        shareParams.idx = '@idx';
        
    gigya.socialize.showShareBarUI(shareParams);
</script>*@
<script type="text/javascript">
    $(document).ready(function () {
        shareParams.userAction = userAction;
        shareParams.userAction.actorUID = '@User.Identity.Name';
        shareParams.type = '@type';
        shareParams.idx = '@idx';
        shareParams.nattributes = $('#naformS').find('input').serialize();
        $.getScript(socializePluginUrl).done(function () {
            tfc.Socialize.ShareBar(shareParams);
        });
        $('#socialShareContainer .cover').live('click', function () {
            tfc.Social.OnSiteLogin();
        });
    });
</script>
