@using TFCTV.Helpers
@model List<SubscriptionProductA>
@{
    ViewBag.Title = "Subscribe - TFC.tv";
    Layout = "~/Views/Shared/_TFCTVBlue.cshtml";
    var csId = Url.RequestContext.RouteData.Values["id"];
    if (Url.RequestContext.RouteData.Values["id"] == null)
    {
        csId = "null";
    }
    var ReturnUrl = HttpUtility.UrlEncode(ViewContext.HttpContext.Request["ReturnUrl"]);
    string ReturnUrlStr = String.Empty;
    if (!String.IsNullOrEmpty(ReturnUrl))
    {
        ReturnUrlStr = String.Format("?ReturnUrl={0}", ReturnUrl);
    }
    var isLoggedIn = MyUtility.isUserLoggedIn().ToString().ToLower();

    int FreeTrialPackageId = ViewBag.FreeTrialPackageId;

    List<string> ListOfDescription = null;
    if (ViewBag.ListOfDescription != null)
    {
        ListOfDescription = ViewBag.ListOfDescription;
    }
    int NumberOfDaysLeft = ViewBag.NumberOfDaysLeft;
}
<br />
<br />
<div id="mainBody">
    <div class="transparentBg">
        <div id="transact-container">
            <div class="breadcrumbs">
                HOME &raquo; FREE TRIAL
            </div>
            <div class="breakStandard">
            </div>
            <div id="prd-selectors" class="hideElement">
            </div>
            <div class="clear">
            </div>
            <div id="subscribe-body">
                <div id="@String.Format("prd-body-{0}", FreeTrialPackageId)" class="pr-subscribe-details" data-package="@FreeTrialPackageId"  data-type="0" data-img-left="@String.Format("#psd-prd-left-{0}", FreeTrialPackageId)" data-img-right="@String.Format("#psd-prd-right-{0}", FreeTrialPackageId)">
                    <div class="psd-leftBlock">
                        <div class="psd-title">
                            FREE TRIAL</div>
                        <div class="psd-desc">
                            Get a taste of what TFC.tv has to offer!</div>
                        <div class="clear breakLarge">
                        </div>
                        <div class="psd-bar">
                        </div>
                        <div class="clear breakSmall">
                        </div>
                        <div class="psd-details">
                            <div class="psd-prd">
                                <div class="breakSmall">
                                </div>
                                <span class="daycopy">You have <span class="days">@NumberOfDaysLeft</span>
                                    @Html.Raw(String.Format("{0}", NumberOfDaysLeft == 1 ? "day" : "days"))
                                    left on your free trial package.</span>
                                <div class="clear breakLarge">
                                </div>
                                <div>
                                    <div class="floatLeft">
                                        <div class="psd-sub-btn">
                                            @Html.ActionLink("Subscribe", "Details", new { controller = "Subscribe" }, new { @class = "nbutton nbutton-anchor pad20 s20 subscribeBtn" })</div>
                                    </div>
                                    <div class="clear breakSmall">
                                    </div>
                                </div>
                            </div>
                            <div class="psd-divide">
                            </div>
                            <div class="psd-prd-breakdown">
                                <div class="breakSmall">
                                </div>
                                <div>
                                    @{if (ListOfDescription != null)
                                      {
                                        <div class="highlight-red">
                                            @Html.Raw(ListOfDescription.Last())
                                        </div>
                                        <div class="breakStandard">
                                        </div>
                                              
                                          foreach (var lItem in ListOfDescription.Take(ListOfDescription.Count() - 1))
                                          {                                    
                                        <text>- @Html.Raw(lItem)
                                        <div class="breakSmall">
                                        </div>
                                        </text>
                                          }
                                      }                                          
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="clear breakLarge">
                        </div>
                    </div>
                    <div class="psd-bdivider">
                    </div>
                    <div class="psd-rightBlock">
                        <div id="psd-prd-content">
                            <div class="psd-prd-img">
                                <div class="psd-prd-img-inner">
                                    <div id="@String.Format("psd-prd-left-{0}", FreeTrialPackageId)" class="psd-prd-left psd-prd-img-co">
                                        @Html.ImageBuilder(Url, "blank.gif", new { title = "", alt = "", width = 146, height = 200 })
                                    </div>
                                    <div id="@String.Format("psd-prd-right-{0}", FreeTrialPackageId)" class="psd-prd-right psd-prd-img-co">
                                        @Html.ImageBuilder(Url, "blank.gif", new { title = "", alt = "", width = 146, height = 200 })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="clear breakStandard">
                    </div>
                </div>
            </div>
            <div class="clear">
            </div>
            <div class="clear">
            </div>
            <div id="slist-container">
                <div id="slist-header">
                    <div class="slist-selection">
                        <span class="list-s"><a href="#" class="grid-link scont-selection" data-link="slist-list">
                            Grid</a><a href="#" class="list-link scont-selection" data-link="slist-tlist">List</a></span></div>
                    <div id="ddselection">
                        <span class="list-s"><span class="white">Filter by</span>&nbsp;&nbsp; @Html.DropDownList("FilterBy", new SelectList(new List<JsonFeatureItem>()), new { @class = "textbox-medium" })</span></div>
                </div>
                <div class="breakSmall">
                </div>
                <div id="slist-list" class="scont">
                </div>
                <div class="clear">
                </div>
                <div id="slist-tlist" class="scont hideElement">
                </div>
                <div class="clear">
                </div>
                <div class="clear">
                </div>
            </div>
            <div class="clear">
            </div>
        </div>
    </div>
</div>
<div id="plswait" class="hideElement">
    <p>@Html.ImageBuilder(Url, "3.gif", new { style = "position: relative; top: 5px;" })
        Please wait while we process your request...</p>
</div>
<div id="flip-data" class="hideElement">
</div>
@section Stylesheet {
    @Html.CssBuilder(Url, "subscription-1.9.css")
    @Html.CssBuilder(Url, "transaction-1.6.css")
    <!--[if IE 7]>
    @Html.CssBuilder(Url, "transaction.ie7-1.1.css")
    @Html.CssBuilder(Url, "subscription.ie7.css")
<![endif]-->
}
@section JScriptBottom {
    @Html.JsBuilder(Url, "helpers.js")
    @Html.JsBuilder(Url, "underscore-min.js")
    @Html.JsBuilder(Url, "jquery.cycle.all.js")
    <script type="text/javascript">
    var yStatus = @isLoggedIn;
    var uriExt = '@ReturnUrlStr';
    var csId = @csId;
    var dSelectedIndex = $($('.pr-subscribe-details:visible').attr('data-group') + ' input[class^=product-selections]:checked').val();
    </script>
    <script type="text/javascript">
        var currentSelectedId = 0;

        function GetShows(sIndex, type, imgLeft, imgRight) {
            $.ajax({
                url: '/Subscribe/GetShows',
                data: { id: sIndex, type: type, currentCategoryId: csId },
                dataType: 'json',
                beforeSend: function () {
                    $('.scont').html($('#plswait').html());
                }
            }).done(function (data) {
                $('#slist-list').empty();
                $(imgLeft).empty();
                $(imgRight).empty();
                //fill grid
                $.each(data, function (x, y) {
                    var html = '<div class="sitem-container"><a href="/Show/Details/' + y.CategoryId + '"><img src="' + y.ImgUrl + '" title="' + y.Name + '" alt="" /></a><div class="sitem-name"><a href="/Show/Details/' + y.CategoryId + '">' + y.Name + '</a></div></div>'
                    $('#slist-list').append(html);
                    if (x > 2) {
                        if (x % 2 && x != 0) {
                            if (imgLeft) {
                                var fhtml = '<img src="' + y.ImgUrl + '" title="' + y.Name + '" alt="" width="146" height="200" />';
                                $(imgLeft).append(fhtml);
                            }
                        }
                        else {
                            if (imgRight) {
                                var fhtml = '<img src="' + y.ImgUrl + '" title="' + y.Name + '" alt="" width="146" height="200" />';
                                $(imgRight).append(fhtml);
                            }
                        }
                    }
                    else if (data.length <= 1) {
                        if (imgLeft) {
                            var fhtml = '<img src="' + y.ImgUrl + '" title="' + y.Name + '" alt="" width="146" height="200" />';
                            $(imgLeft).addClass('center-img').html(fhtml);
                            if (imgRight)
                                $(imgRight).remove();
                        }
                    }
                });

                //fill text
                var groupData = _.groupBy(data, function (obj) {
                    return obj.ParentCategoryName;
                });

                var optGroups = [];
                var html = '';

                for (var key in groupData) {
                    if (groupData.hasOwnProperty(key)) {
                        html += '<div class="tlist-container">';
                        html += '<div class="t-title">' + key + '</div>';
                        var currentGroup = groupData[key];
                        html += '<ul class="t-ul">';
                        for (var i = 0; i < currentGroup.length; i++) {
                            html += '<li><a href="/Show/Details/' + currentGroup[i].CategoryId + '">' + currentGroup[i].Name + '</a></li>';
                        }
                        html += '</ul>';
                        html += '<div class="breakStandard"></div>';
                        html += '</div>';
                    }
                }
                var $container = $('#slist-tlist');
                $('#slist-tlist').empty();
                $(html).appendTo('#slist-tlist');

                //cycle                
                if (data.length > 1) {
                    $(imgLeft).cycle({
                        fx: 'fade'
                    });
                    $(imgRight).cycle({
                        fx: 'fade',
                        delay: -8000
                    });
                }
            });
        }

        function fillDropdown(list, type, init, imgLeft, imgRight) {
            var dd = $('#FilterBy');
            if (init) {
                dd.find('option').remove().end();
                $.getJSON('/Subscribe/GetCategories', { list: list, type: type }, function (data) {
                    $.each(data, function (x, y) {
                        if (x == 0 && init) {
                            currentSelectedId = y.Value;
                            if (y.Text == '--')
                                $('.list-s').hide();
                            else
                                $('.list-s').show();
                            var yText = (y.Text == '--' ? 2 : 0);
                            setTimeout(function () { GetShows(y.Value, yText, imgLeft, imgRight) }, 500);
                        }
                        dd.append($('<option>').val(y.Value).text(y.Text));
                    });
                });
                $('.scont-selection').removeClass('link-selected').first().addClass('link-selected');
            }
        }

        function initView() {
            var lStart = $('.pr-subscribe-details:visible');
            var type = lStart.attr('data-type');
            if (type == 0)
                fillDropdown(lStart.attr('data-package'), type, true, lStart.attr('data-img-left'), lStart.attr('data-img-right'));
            else
                fillDropdown(lStart.attr('data-show'), type, true, lStart.attr('data-img-left'), lStart.attr('data-img-right'));
        }
        $(document).ready(function () {
            //initialize
            initView();

            $(document).on('click', '.prd-selections', function () {
                var tmp = $(this).hasClass('c-hovered');
                $('.prd-selections').removeClass('c-hovered'); $(this).addClass('c-hovered');
                var elementId = $(this).attr('data-group');
                dSelectedIndex = $(elementId + ' input[class^=product-selections]:checked').val();
                $('.pr-subscribe-details').hide();
                $($(this).attr('data-body')).show();
                var type = $(this).attr('data-type');
                if (type == 0)
                    fillDropdown($(this).attr('data-package'), type, !tmp, $(this).attr('data-img-left'), $(this).attr('data-img-right'));
                else
                    fillDropdown($(this).attr('data-show'), type, !tmp, $(this).attr('data-img-left'), $(this).attr('data-img-right'));
                return false;
            });

            //selection on dropdown            
            $('#FilterBy').selected(function (data) {
                var sIndex = data.options[data.selectedIndex];
                if (currentSelectedId != sIndex.value) {
                    $('#slist-list').empty();
                    var sIx = 1;
                    if (sIndex.text == 'ALL')
                        sIx = 0;
                    else if (sIndex.text == '--')
                        sIx = 2;
                    GetShows(sIndex.value, sIx);
                    currentSelectedId = sIndex.value;
                }
            });
            $('.scont-selection').click(function () {
                $('.scont-selection').removeClass('link-selected');
                $('.scont').hide();
                var elementId = '#' + $(this).attr('data-link');
                $(this).addClass('link-selected');
                $(elementId).show();
                return false;
            });
        });         
    </script>
}
