@model IPTV2_Model.Episode
@{
    Layout = "~/Views/Shared/_UXUpdate.cshtml";
    IPTV2_Model.Show show = ViewBag.Show;

    string pageTitle = String.Format("{0}, {1} Episode", show.Description, Model.DateAired.Value.ToString("MMMM d, yyyy"));

    /* ShareBar Metadata */
    string title = String.Format("{0}, {1}", show.Description, Model.DateAired.Value.ToString("MMMM d, yyyy"));
    string href = new Uri(Request.Url.AbsoluteUri).GetLeftPart(UriPartial.Path);
    string img = String.Format("{0}{1}/{2}", GlobalConfig.EpisodeImgPath, Model.EpisodeId, Model.ImageAssets.ImageVideo);
    string description = MyUtility.trimmer.Replace(Model.Description.Ellipsis(160), " ");

    /* ShareBar Obj */
    var ShareObj = new GigyaShareObj()
    {
        title = title,
        href = href,
        img = img,
        description = description,
        containerId = "shareDiv",
        elementType = "episode",
        id = Model.EpisodeId
    };

    /* Meta description */
    string metaDescription = String.Format("{0}, {1}", title, MyUtility.trimmer.Replace(Model.Synopsis, " "));

    /* Open Graph */
    string open_graph_img = img; //will add sns later
    string og_type = "video.episode";

    /* Ratings&Reviews Metadata */
    string streamID = String.Format("Episode_{0}", Model.EpisodeId);
    string categoryID = "Episodes";
    if (show is IPTV2_Model.Movie || show is IPTV2_Model.SpecialShow || show is IPTV2_Model.LiveEvent)
    {
        title = show.Description;
        img = String.Format("{0}{1}/{2}", GlobalConfig.ShowImgPath, show.CategoryId, show.ImagePoster);
        pageTitle = title;
        streamID = String.Format("Show_{0}", show.CategoryId);
        categoryID = "Shows";

        /* Change the type to Show & id to CategoryId if found to be a Movie/Special/LiveEvent */
        ShareObj.elementType = "show";
        ShareObj.id = show.CategoryId;

        /* Change the meta description if it is a movie */
        metaDescription = String.Format("{0}, {1}", show.Description, MyUtility.trimmer.Replace(show.Blurb, " "));

        /* Change Open Graph data */
        og_type = "video.movie";
    }

    /* Robot Crawlability */
    var noCommentText = String.Format("There are no comments available for {0}", title);
    bool IsAjaxCrawlable = Request.IsAjaxCrawlingCapable();

    /* CommentsUI Obj */
    var CommentsUIObj = new GigyaWidgetUIObj()
    {
        streamID = streamID,
        categoryID = categoryID,
        containerId = "commentsDiv",
        ShareObj = ShareObj,
        IsAjaxCrawlable = IsAjaxCrawlable
    };

    /* Reactions Obj */
    var ReactionsUIObj = new GigyaWidgetUIObj()
    {
        streamID = streamID,
        categoryID = categoryID,
        containerId = "reactionsDiv",
        ShareObj = ShareObj

    };

    ViewBag.Title = String.Format("{0} - TFC.tv", Model.Description);

    string headerImg = GlobalConfig.AssetsBaseUrl + GlobalConfig.BlankGif;
    try
    {
        headerImg = String.IsNullOrEmpty(Model.ImageAssets.ImageHeader) ? GlobalConfig.AssetsBaseUrl + GlobalConfig.BlankGif : String.Format("{0}{1}/{2}", GlobalConfig.EpisodeImgPath, Model.EpisodeId, Model.ImageAssets.ImageHeader);
    }
    catch (Exception) { }

    //CoverItLive!
    var altcastcode = ViewBag.CoverItLiveAltCastCode;

    CheckSubscriptionReturnObject HasActiveSubscriptionBasedOnCategoryId = ViewBag.HasActiveSubscriptionBasedOnCategoryId;
    string ScreenText = "Click play to watch the full video";
    if (!(HasActiveSubscriptionBasedOnCategoryId.HasSubscription))
    {
        if (User.Identity.IsAuthenticated)
        {
            ScreenText = "Subscribe to watch live stream";
        }
        else
        {
            ScreenText = "You are currently not logged in";
        }
    }

    /* show and category parent categories */
    string showParentCategories = ContextHelper.GetShowParentCategories(show.CategoryId);
    string parentCategories = ContextHelper.GetEpisodeParentCategories(Model.EpisodeId);
    string cilContainerId = String.Format("cil-root-{0}", altcastcode);
    string cilScriptId = String.Format("cilScript-{0}", altcastcode);

    //get dax
    var daxDetail = String.Format("tfc-tv:uaap:live:{0}{1}", MyUtility.GetSlug(show.Description), (show is IPTV2_Model.Movie || show is IPTV2_Model.LiveEvent) ? null : String.Format(":{0}", Model.DateAired));
    ViewBag.DaxName = daxDetail;

    string TwitterUrl = String.Empty;
    string TwitterWidgetId = String.Empty;
    try
    {
        if (ViewBag.TwitterUrl != null) { TwitterUrl = ViewBag.TwitterUrl; }
        if (ViewBag.TwitterWidgetId != null) { TwitterWidgetId = ViewBag.TwitterWidgetId; }
    }
    catch (Exception) { }

    var streamSenseObj = ContextHelper.CreateStreamSenseObject(Model, show);

}
<!-- uaap live stream page body  -->
<section class="page_pagebody page_videopage uaap_pagebody">
    <div class="container">
        <div class="row channel_header">
            <!-- page header -->
            @Html.ImageBuilder(Url, String.Format("banners/uaap_{0}.jpg", GlobalConfig.UAAPMainCategoryId.ToString()), new { @class = "img100", alt = "" })
        </div>
        <!-- END page header -->
        <div class="row subnav">
            <!-- sub nav -->
            <ul>
                <li><a href="@Url.Action("Index", "UAAP")">MAIN PAGE</a></li>
                <li class="active"><a href="@Url.Action("Live", "UAAP" )">LIVE STREAM</a></li>
                <li><a href="@Url.Action("Teams", "UAAP")">THE TEAMS</a></li>
            </ul>
        </div>
        <!-- END sub nav -->
        <div class="row">
            <!-- page left side -->
            <div class="video_left col-sm-7 col-xs-12">
                <!-- video player section -->
                <div class="video_player_outer">
                    <div class="video_player">
                        <!-- video player -->
                        <div class="video_part">
                            <div class="black-screen-668x406" id="floating_videodiv">
                                <div class="bs-play">
                                    @{if (HasActiveSubscriptionBasedOnCategoryId.HasSubscription || !Request.Browser.IsMobileDevice)
                                    {
                                        @Html.ImageBuilder(Url, "entrypoint/playbtn-silver.png", new { id = "pbtn-silver" })
                                    }
                                    else
                                    {
                                        <div class="breakLarge">
                                        </div>
                                        <div class="breakLarge">
                                        </div>
                                    }
                                    }
                                    <div class="bs-watch">
                                        @Html.Raw(ScreenText)
                                    </div>
                                </div>
                            </div>
                            <div id="playerContainer" class="regular_video">
                            </div>
                            @{if (!User.Identity.IsAuthenticated && !HasActiveSubscriptionBasedOnCategoryId.HasSubscription)
                            {
                                <script type="text/javascript">
                                    NoAccess = true;
                                </script>
                                <div class="bs-sbar switch-to-540">
                                    <span>
                                        <a href="#" class="bs-signin bs-atag bs-box bs-box-signin">SIGN IN</a> to watch
                                        the live stream.
                                    </span>
                                </div>
                            }
                            else
                            {
                                if (HasActiveSubscriptionBasedOnCategoryId.HasSubscription && HasActiveSubscriptionBasedOnCategoryId.Within5DaysOrLess)
                                {
                                    <div class="bs-sbar switch-to-540">
                                        <span>
                                            Your subscription will expire in @HasActiveSubscriptionBasedOnCategoryId.NumberOfDaysLeft
                                            @(HasActiveSubscriptionBasedOnCategoryId.NumberOfDaysLeft > 1 ? "days" : "day").
                                            @Html.ActionLink("RENEW", "Details", "Subscribe", new { id = show.CategoryId, ReturnUrl = href }, new { @class = "bs-atag bs-box bs-box-renew" })
                                            now to extend or <a href="#" class="bs-atag bs-close">close</a> this bar to renew
                                            later.
                                        </span>
                                    </div>
                                }
                                else if (!HasActiveSubscriptionBasedOnCategoryId.HasSubscription)
                                {
                                    <div class="bs-sbar switch-to-540">
                                        <span>
                                            @Html.ActionLink("SUBSCRIBE", "Details", "Subscribe", new { id = show.CategoryId, ReturnUrl = href }, new { @class = "bs-atag bs-box bs-box-subscribe" })
                                            to watch the live stream.
                                        </span>
                                    </div>
                                }
                            }
                            }
                        </div>
                    </div>
                    @Html.Partial("PlayerSwitcher")
                    <!-- end video player -->
                    <div class="video_des">
                        <!-- description for video -->
                        <h3>
                            @Html.Raw(Model.Description)
                        </h3>
                        <p>
                            @Html.Raw(Model.Synopsis)
                        </p>
                    </div>
                    <!-- end description -->
                    <div class="video_share clearfix">
                        <!-- Social media share part -->
                        <div id="@ShareObj.containerId" class="col-xs-6 clearfix show_share">
                        </div>
                        <p>
                            If you are having problems viewing this video, please visit our <a href="@Url.Action("Index", "Help")">
                                Help Center.
                            </a> @*Is your video buffering? <a href="#">Check your bandwidth.</a>*@
                        </p>
                    </div>
                    <div class="clearfix">
                        <div id="@ReactionsUIObj.containerId">
                        </div>
                    </div>
                    <!-- end social -->
                </div>
                <!-- end video player section -->
                <div class="row vp_bottom_video">
                    <!-- page's bottom videos -->
                    <div class="col-xs-12 vp_head">
                        <!-- head part -->
                        <ul>
                            <li class="active"><a href="#uaap_allgame" data-toggle="tab">SEE ALL GAMES</a></li>
                            <li><a href="#uaap_exclusive" data-toggle="tab">EXCLUSIVE VIDEOS</a></li>
                        </ul>
                    </div>
                    <!-- END head part -->
                    <div class="col-xs-12 vp_body tab-content">
                        <!-- Tab panes -->
                        @Html.Action("GetUAAPContent", "UAAP", new { partialViewName = "GetUAAPContentVertical", pageSize = GlobalConfig.FeatureItemsPageSize, id = "uaap_allgame", is_active = true })
                        @Html.Action("GetUAAPFeaturedContent", "UAAP", new { pageSize = GlobalConfig.FeatureItemsPageSize, id = "uaap_exclusive", featureId = GlobalConfig.UAAPExclusiveFeaturesId })
                        <!-- END EXCLUSIVE VIDEOS body part -->
                    </div>
                    <!-- END Tab panes -->
                </div>
                <!-- end page bottom videos -->
            </div>
            <!-- end page left -->
            <!-- page right side -->
            <div class="video_right col-sm-5 col-xs-12">
                @{if (!String.IsNullOrEmpty(altcastcode))
                {
                    <div class="row live_box hide480">
                        <!-- right top box -->
                        <div class="col-xs-12">
                            <div class="hide">
                                @Model.Description
                            </div>
                            <div id='@cilContainerId' class='cil-root'>
                                <span class='cil-config-data' title='{"altcastCode":"@altcastcode","server":"www.coveritlive.com","geometry":{"width":"fit","height":550},"configuration":{"newEntryLocation":"bottom","commentLocation":"bottom","replayContentOrder":"chronological","pinsGrowSize":"on","titlePage":"off","skinOverride":""}}'>
                                    &nbsp;
                                </span>
                            </div>
                            <script type="text/javascript">                            window.cilAsyncInit = function () { cilEmbedManager.init() }; (function () { if (window.cilVwRand === undefined) { window.cilVwRand = Math.floor(Math.random() * 10000000); } var e = document.createElement('script'); e.async = true; var domain = (document.location.protocol == 'http:' || document.location.protocol == 'file:') ? 'http://cdnsl.coveritlive.com' : 'https://cdnslssl.coveritlive.com'; e.src = domain + '/vw.js?v=' + window.cilVwRand; e.id = '@cilScriptId'; document.getElementById('@cilContainerId').appendChild(e); } ());</script>
                        </div>
                    </div>
                }
                else if (!String.IsNullOrEmpty(TwitterUrl) && !String.IsNullOrEmpty(TwitterWidgetId))
                {
                    <div class="row live_box hide480">
                        <!-- right top box -->
                        <div class="col-xs-12">
                            <div class="hide">
                                @Model.Description
                            </div>
                            <div id="twitter-tl">
                                <a class="twitter-timeline" href="@Html.Raw(TwitterUrl)" data-widget-id="@TwitterWidgetId">Tweets about @Model.Description</a>
                                <script>!function (d, s, id) { var js, fjs = d.getElementsByTagName(s)[0], p = /^http:/.test(d.location) ? 'http' : 'https'; if (!d.getElementById(id)) { js = d.createElement(s); js.id = id; js.src = p + "://platform.twitter.com/widgets.js"; fjs.parentNode.insertBefore(js, fjs); } }(document, "script", "twitter-wjs");</script>
                            </div>

                        </div>
                    </div>
                }
                }
                <!-- end right top box -->
                <div class="row page_add">
                    <!-- page add -->
                    @{if (!MyUtility.IsAdRestricted(show.CategoryId))
                    {
                    <!-- Google MRec -->
                        <script type='text/javascript'>
                            GA_googleFillSlot("TFCtv_MediumRectangle_300x250");
                        </script>
                    }
                    }
                </div>
            </div>
            <!-- end page right -->
            <!-- Review section -->
            <div class="reviewsec col-sm-7 col-xs-12">
                <h3>
                    @String.Format("{0} - Ratings and Reviews", Model.Description)
                </h3>
                <div id="@CommentsUIObj.containerId" class="row post_review clearfix">
                    @{if (IsAjaxCrawlable)
                    {
                        try
                        {
                            var responseData = GigyaMethods.GetComments(categoryID, streamID);
                            if (responseData != null)
                            {
                                if (responseData.errorCode == 0)
                                {
                                    if (responseData.commentCount > 0)
                                    {
                                        @Html.Raw(responseData.comments)
                                    }
                                    else
                                    {
                                        <span>@noCommentText</span>
                                    }
                                }
                            }
                        }
                        catch (Exception) { }
                    }
                    }
                </div>
            </div>
            <!-- end Review section -->
        </div>
        <!-- end row -->
    </div>
    <!-- end container -->
</section>
<!-- END uaap live stream page body  -->
@section JScriptBottom {
    @Html.JsBuilder(Url, "jquery.jscroll.min.js")
    <script type="text/javascript">
        $(document).ready(function () {
            $('.movie_sec').jscroll({
                autoTrigger: false,
                nextSelector: 'a.loadMore:last',
                loadingHtml: '<div class="sec_footer gray jscroll_sec_footer">loading...<br><img alt="Load more episodes" border="0" src="/Content/images/ux/load_more.png"></div>'
            });
        });
    </script>
    @Html.Partial("_UXShareUI", ShareObj)
    @Html.Partial("_UXCommentsUI", CommentsUIObj)
    <!-- Flowplayer -->
    @{if (GlobalConfig.StreamSenseEnabled)
    {
        @Html.Partial("FlowPlayerStreamSensePartial", true)
    }
    else
    {
        @Html.Partial("FlowPlayerPartial", true)
    }}
    <script type="text/javascript">

        var userActionURL = '@href';
        var playerContainer = 'playerContainer';
        var eid = null;
        var sid = null;
        var playbackId = @Model.EpisodeId;
        var playbackType = 4; // Episode
        var flow = {}; var config = {};
        var categoryType = '@ViewBag.CategoryType';
    </script>
    @{if ((show is IPTV2_Model.Movie || show is IPTV2_Model.SpecialShow))
    {
        <script type="text/javascript">
            var gmessage = 'I just watched @HttpUtility.JavaScriptStringEncode(show.Description)';
            var gtitle = '@HttpUtility.JavaScriptStringEncode(title)';
            var gdescription = '@HttpUtility.JavaScriptStringEncode(show.Blurb)';
            var gimg = '@img';
            var ghref = '@href';
        </script>
    }
    else
    {
        <script type="text/javascript">
            var gmessage = 'I just watched an episode of @Ajax.JavaScriptStringEncode(show.Description)';
            var gtitle = '@Ajax.JavaScriptStringEncode(title)';
            var gdescription = '@Ajax.JavaScriptStringEncode(Model.Synopsis)';
            var gimg = '@img';
            var ghref = '@href';
        </script>
    }
    }
    <!-- media-player -->
    <script type="text/javascript">
        //CreatePlayer()
        function CreatePlayer(uri) {
            $.ajax({
                url: uri
                    , dataType: 'json'
                    , success: function (data) {
                        if (data.errorCode == 0) {
                            $.getScript(playerJS).done(function () {
                                var akObj = { url: Afp };
                                var config = { container: playerContainer, playerSWF: playerSWF, expressInstallSWF: expressInstallSWF, playButtonURL: playButtonURL, logoURL: logoURL, controllerSWF: controllerSWF, csmaPluginSWF: csmaPluginSWF, csmaConfig: csmaConfig, apObj: akObj, scaling: 'fit', url: data.data.Url, categoryType: categoryType, label: null, sid: sid, eid: eid, isClip: false, trackerSWF: trackerSWF, trackerID: trackerID, userActionURL: userActionURL, uri: uri, time: false, ipadUrl: data.data.Url, allowShare: false, playbackType: playbackType, playbackId: playbackId, analyticsSWF: analyticsSWF, subscribe: data.data.PromptToSubscribe, gmessage: gmessage, gtitle: gtitle, gdescription: gdescription, gimg: gimg, ghref: ghref, streamType: 0 };
                                flow.Player.Create(config);
                            });
                        }
                        else if (data.errorCode == -4000) {
                            gigya.socialize.logout({ callback: function (response) {
                                location.href = '@GlobalConfig.MultipleLoginRedirectedUrl';
                            }
                            });
                            location.href = '@GlobalConfig.MultipleLoginRedirectedUrl';
                        }
                        else if (data.errorCode == -704) {
                            $('#' + playerContainer).append($('#subscribePromptcontainer_1').html());
                            if ($f() == undefined) {
                                $('#subscribePrompt_1').css('margin-top', '0px');
                            }
                        }
                        else {
                            $('.player-menu-container').remove();
                            $('#' + playerContainer).html($('#not-available').html());
                        }
                    }
            });
        }
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            var uri = '/Ajax/GetMedia/@Model.EpisodeId';
            CreatePlayer(uri);
        });
    </script>
    <script type="text/javascript">
        $('.bs-close').on('click', function () {
            $('.bs-sbar').fadeOut(800);
            $('.black-screen-668x406').fadeOut(800);
            return false;
        });
    </script>
    @{if (HasActiveSubscriptionBasedOnCategoryId.HasSubscription && !Request.Browser.IsMobileDevice)
    {
        <script type="text/javascript">
            $('#pbtn-silver').on('click', function () {
                $('.black-screen-668x406').fadeOut(800);
                if ($f() != undefined)
                    $f().play();
                setTimeout(function () { $('.ib_close_bar').fadeOut(800); }, 15000);
            });
        </script>
    }
    }
    @Html.Partial("PlayerSwitcherJS")
    @Html.Partial("StreamSensePartial", streamSenseObj)
}
@section MetaTags {
    <meta name="fragment" content="!">
    <meta name="description" content="@HttpUtility.HtmlEncode(metaDescription)" />
    <meta name="keywords" content="@Model.Metadata" />
    <link rel="canonical" href="@href" />
    <link rel="image_src" href="@img">
}
@section OpenGraph {
    <meta property="og:url" content="@href" />
    <meta property="og:site_name" content="TFC.tv" />
    <meta property="og:title" content="@title" />
    <meta property="og:description" content="@HttpUtility.HtmlEncode(metaDescription)" />
    <meta property="og:type" content="@og_type" />
    <meta property="og:image" content="@open_graph_img" />
}
@section  JScript {
    <!-- Google Ads -->
    <script type='text/javascript' src='http://partner.googleadservices.com/gampad/google_service.js'>
    </script>
    <script type='text/javascript'>
        GS_googleAddAdSenseService("ca-pub-1805244726360577");
        GS_googleEnableAllServices();
    </script>
    <script type="text/javascript">
        GA_googleAddAttr("Episode", "@Model.EpisodeId");
        GA_googleAddAttr("Show", "@parentCategories");
        GA_googleAddAttr("Category", "@showParentCategories");
    </script>
    <script type='text/javascript'>
        GA_googleAddSlot("ca-pub-1805244726360577", "TFCtv_MediumRectangle_300x250");
    </script>
    <script type='text/javascript'>
        GA_googleFetchAds();
    </script>
}
